000017B4 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/29/2020 2:18:56 AM

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000280                 85  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 86  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000050                 88  SCRTIM      EQU     80                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 93  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 95  -------------------- end include --------------------
00001000                            96              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            97  ; =============================================================================
00001000                            98  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            99  ; AUTHOR   : ANTONI BURGUERA
00001000                           100  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           101  ;            - SYS : GENERIC.
00001000                           102  ;            - SCR : SCREEN MANAGEMENT.
00001000                           103  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           104  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           105  ;            11-OCT-2020 - MINOR CHANGES
00001000                           106  ; =============================================================================
00001000                           107  
00001000                           108  ; -----------------------------------------------------------------------------
00001000                           109  SYSINIT
00001000                           110  ; INITIALIZES THE SYSTEM
00001000                           111  ; INPUT    - NONE
00001000                           112  ; OUTPUT   - NONE
00001000                           113  ; MODIFIES - NONE
00001000                           114  ; -----------------------------------------------------------------------------
00001000  205F                     115              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            116              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            117              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            118              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                119              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     120              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     121              RTS
0000101C                           122  
0000101C                           123  ; =============================================================================
0000101C                           124  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           125  ; =============================================================================
0000101C                           126  
0000101C                           127  ; -----------------------------------------------------------------------------
0000101C                           128  SCRINIT
0000101C                           129  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           130  ; INPUT    - NONE
0000101C                           131  ; OUTPUT   - NONE
0000101C                           132  ; MODIFIES - D0,D1,D2,D3
0000101C                           133  ; -----------------------------------------------------------------------------
0000101C  007C 0700                134              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       135              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 028001E0            136              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                137              MOVE.B  #33,D0
00001032  4E4F                     138              TRAP    #15
00001034  7201                     139              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     140              TRAP    #15
00001038  323C FF00                141              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                142              MOVE.B  #11,D0
00001040  4E4F                     143              TRAP    #15
00001042  123C 0011                144              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                145              MOVE.B  #92,D0
0000104A  4E4F                     146              TRAP    #15
0000104C  323C FF00                147              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                148              MOVE.B  #11,D0
00001054  4E4F                     149              TRAP    #15
00001056  21FC 0000108C 0064       150              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                151              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                152              MOVE.B  #32,D0
00001066  4E4F                     153              TRAP    #15
00001068  143C 0081                154              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0050                155              MOVE.B  #SCRTIM,D3
00001070  123C 0006                156              MOVE.B  #6,D1
00001074  103C 0020                157              MOVE.B  #32,D0
00001078  4E4F                     158              TRAP    #15
0000107A  4239 00001812            159              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001813            160              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                161              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     162              RTS
0000108C                           163  
0000108C                           164  ; -----------------------------------------------------------------------------
0000108C                           165  SCRISR
0000108C                           166  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           167  ; INPUT    - NONE
0000108C                           168  ; OUTPUT   - NONE
0000108C                           169  ; MODIFIES - NONE
0000108C                           170  ; -----------------------------------------------------------------------------
0000108C  5239 00001812            171              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001813            172              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     173              RTE
0000109A                           174  
0000109A                           175  ; -----------------------------------------------------------------------------
0000109A                           176  SCRUPD
0000109A                           177  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           178  ; BUFFER FOR THE NEXT ONE.
0000109A                           179  ; INPUT    - NONE
0000109A                           180  ; OUTPUT   - NONE
0000109A                           181  ; MODIFIES - NONE
0000109A                           182  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                183              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                184              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     185              TRAP    #15
000010A4  323C FF00                186              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                187              MOVE.B  #11,D0
000010AC  4E4F                     188              TRAP    #15
000010AE  4C9F 0003                189              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     190              RTE
000010B4                           191  
000010B4                           192  ; =============================================================================
000010B4                           193  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           194  ; =============================================================================
000010B4                           195  
000010B4                           196  ; -----------------------------------------------------------------------------
000010B4                           197  KBDINIT
000010B4                           198  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           199  ; INPUT    - NONE
000010B4                           200  ; OUTPUT   - NONE
000010B4                           201  ; MODIFIES - NONE
000010B4                           202  ; -----------------------------------------------------------------------------
000010B4  4239 00001810            203              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001811            204              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       205              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     206              RTS
000010CA                           207  
000010CA                           208  ; -----------------------------------------------------------------------------
000010CA                           209  KBDREAD
000010CA                           210  ; TRAP SERVICE ROUTINE.
000010CA                           211  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           212  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           213  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           214  ; INPUT    - NONE
000010CA                           215  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           216  ; MODIFIES - NONE
000010CA                           217  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                218              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                219              MOVE.B  #19,D0
000010D2  223C 50104D20            220              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     221              TRAP    #15
000010DA  6100 002A                222              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            223              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     224              TRAP    #15
000010E6  6100 001E                225              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001810            226              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     227              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     228              AND.B   D2,D0
000010F4  13C2 00001810            229              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001811            230              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                231              MOVEM.L (A7)+,D0-D3
00001104  4E73                     232              RTE
00001106                           233  
00001106  363C 0003                234  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     235  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     236              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                237              DBRA.W  D3,.LOOP
00001112  4E75                     238              RTS
00001114                           239  
00001114                           240  ; =============================================================================
00001114                           241  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           242  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           243  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           244  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           245  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           246  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           247  ; =============================================================================
00001114                           248  
00001114                           249  ; -----------------------------------------------------------------------------
00001114                           250  DMMINIT
00001114                           251  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           252  ; INPUT    - NONE
00001114                           253  ; OUTPUT   - NONE
00001114                           254  ; MODIFIES - NONE
00001114                           255  ; -----------------------------------------------------------------------------
00001114  48E7 8080                256              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001840            257              LEA     DMMDATA,A0
0000111E  303C 0031                258              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                259  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            260              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                261              DBRA.W  D0,.LOOP
00001130  4CDF 0101                262              MOVEM.L (A7)+,D0/A0
00001134  4E75                     263              RTS
00001136                           264  
00001136                           265  ; -----------------------------------------------------------------------------
00001136                           266  DMMFIRST
00001136                           267  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           268  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           269  ; INPUT    - NONE
00001136                           270  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           271  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           272  ; -----------------------------------------------------------------------------
00001136  41F9 00001840            273              LEA     DMMDATA,A0
0000113C  4A58                     274  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                275              BNE     DMMFRFND
00001142  D1FC 0000003E            276              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 000024BF            277  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     278              BLT     DMMFRLOP
00001150  207C 00000000            279              MOVE.L  #0,A0
00001156  4E75                     280  DMMFRFND    RTS
00001158                           281  
00001158                           282  ; -----------------------------------------------------------------------------
00001158                           283  DMMNEXT
00001158                           284  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           285  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           286  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           287  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           288  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           289  ; -----------------------------------------------------------------------------
00001158  2F00                     290              MOVE.L  D0,-(A7)
0000115A  2008                     291              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            292              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            293              ADD.L   #DMMBSIZE,D0
00001168  2040                     294              MOVE.L  D0,A0
0000116A  201F                     295              MOVE.L  (A7)+,D0
0000116C  60DA                     296              BRA     DMMFRCOM
0000116E                           297  
0000116E                           298  ; -----------------------------------------------------------------------------
0000116E                           299  DMMFRSTO
0000116E                           300  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           301  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           302  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           303  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           304  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           305  ; -----------------------------------------------------------------------------
0000116E  41F9 00001840            306              LEA     DMMDATA,A0
00001174  B058                     307  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                308              BEQ     DMMFFND
0000117A  D1FC 0000003E            309              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 000024BF            310  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     311              BLT     DMMFLOOP
00001188  207C 00000000            312              MOVE.L  #0,A0
0000118E  4E75                     313  DMMFFND     RTS
00001190                           314  
00001190                           315  ; -----------------------------------------------------------------------------
00001190                           316  DMMNEXTO
00001190                           317  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           318  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           319  ; INPUT    - D0.W : ID TO SEARCH
00001190                           320  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           321  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           323  ; -----------------------------------------------------------------------------
00001190  2F00                     324              MOVE.L  D0,-(A7)
00001192  2008                     325              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            326              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            327              ADD.L   #DMMBSIZE,D0
000011A0  2040                     328              MOVE.L  D0,A0
000011A2  201F                     329              MOVE.L  (A7)+,D0
000011A4  60DA                     330              BRA     DMMFCOM
000011A6                           331  
000011A6                           332  ; -----------------------------------------------------------------------------
000011A6                           333  DMMALLOC
000011A6                           334  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           335  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           336  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           337  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           339  ; -----------------------------------------------------------------------------
000011A6  3F00                     340              MOVE.W  D0,-(A7)
000011A8  4240                     341              CLR.W   D0
000011AA  4EB8 116E                342              JSR     DMMFRSTO
000011AE  301F                     343              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            344              CMP.L   #0,A0
000011B6  6700 0006                345              BEQ     .END
000011BA  3140 FFFE                346              MOVE.W  D0,-2(A0)
000011BE  4E75                     347  .END        RTS
000011C0                           348  
000011C0                           349  ; -----------------------------------------------------------------------------
000011C0                           350  DMMFREE
000011C0                           351  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           352  ; SYSTEM (0)
000011C0                           353  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           354  ; OUTPUT   - NONE
000011C0                           355  ; MODIFIES - NONE
000011C0                           356  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                357              MOVEM.L D0/A0,-(A7)
000011C4  2008                     358              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            359              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     360              MOVE.L  D0,A0
000011CE  4250                     361              CLR.W   (A0)
000011D0  4CDF 0101                362              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     363              RTS
000011D4  4E75                     364  -------------------- end include --------------------
000011D6                           365              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           366  ; =============================================================================
000011D6                           367  ; TITLE    : GAME CONSTANTS
000011D6                           368  ; AUTHOR   :
000011D6                           369  ; HISTORY  :
000011D6                           370  ; =============================================================================
000011D6                           371  ;   TILE
000011D6                           372  
000011D6  =00000020                373  TILEDIM     EQU     32         ; TILE SET DIMENSIONS && PLAYER SPEED
000011D6                           374  
000011D6  =00745B6D                375  TILEDARK    EQU     $00745B6D  ; TILE SET DARK COLOR 
000011D6  =00CCE0EA                376  TILELIGH    EQU     $00CCE0EA  ; TILE SET LIGHT COLOR
000011D6  =00A38099                377  TILEDETA    EQU     $00A38099  ; TILE SET DETAIL COLOR
000011D6                           378  
000011D6= 594F 5520 444F 2...      379  NOKEYSTRING DC.W    'YOU DO NOT HAVE ANY KEYS', 0
000011F0                           380  
000011F0= 534F 4D45 2050 4...      381  DEATHSTRING DC.W    'SOME PART OF YOUR SOUL FADES AWAY', 0
00001214                           382  
00001214= 594F 5520 4841 4...      383  SUSSERTOD   DC.W    'YOU HAD SO MUCH TO LIVE FOR, YET YOU WENT DOWN THE DUNGEON', 0
00001250                           384  
00001250  =00000032                385  ENEMYMAXCNT EQU     50
00001250                           386  
00001250= 0080 01E0 0200 0...      387  XVALUES     DC.W    $80, $1E0, $200, $1A0, $C0, $A0, $180, $E0, $60, $100
00001264= 0220 0120 01C0 0...      388              DC.W    $220, $120, $1C0, $140, $160, $80, $A0, $1E0, $180, $140 
00001278= 0100 00E0 01A0 0...      389              DC.W    $100, $E0, $1A0, $160, $220, $200, $C0, $60, $1C0, $120    
0000128C= 0140 0160 0060 0...      390              DC.W    $140, $160, $60, $100, $E0, $120, $1E0, $1A0, $A0, $1C0
000012A0= 0220 00C0 0080 0...      391              DC.W    $220, $C0, $80, $200, $180, $100, $80, $220, $1C0, $1E0
000012B4= 00E0 0120 0060 0...      392              DC.W    $E0, $120, $60, $160, $200, $C0, $140, $A0, $180, $1A0   
000012C8                           393  
000012C8= 00B0 0150 0030 0...      394  YVALUES     DC.W    $B0, $150, $30, $10, $F0, $70, $90, $50, $D0, $190
000012DC= 01D0 0130 0170 0...      395              DC.W    $1D0, $130, $170, $1B0, $110, $170, $F0, $110, $10
000012EE= 0050 0070 0150 0...      396              DC.W    $50, $70, $150, $1D0, $130, $D0, $30, $90, $190, $B0
00001302= 00D0 0130 0090 0...      397              DC.W    $D0, $130, $90, $70, $150, $10, $1B0, $50, $30, $B0
00001316= 0110 0170 00F0 0...      398              DC.W    $110, $170, $F0, $190, $1D0, $1B0, $130, $190, $10, $1B0
0000132A= 00B0 00D0 0110 0...      399              DC.W    $B0, $D0, $110, $50, $F0, $1D0, $170, $150, $90, $30
0000132A= 00B0 00D0 0110 0...      400  -------------------- end include --------------------
0000133E                           401              INCLUDE "RANDOM.X68"            ; PSEUDO - RANDOM GENERATOR
0000133E                           402  ; =============================================================================
0000133E                           403  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
0000133E                           404  ; AUTHOR   : ANTONI BURGUERA
0000133E                           405  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
0000133E                           406  ; HISTORY  : XX-XXX-201X - CREATION
0000133E                           407  ;            11-OCT-2020 - MINOR CHANGES
0000133E                           408  ; =============================================================================
0000133E                           409  
0000133E                           410  ; -----------------------------------------------------------------------------
0000133E                           411  RNDINIT
0000133E                           412  ; INITIALIZES RANDOM NUMBER GENERATOR
0000133E                           413  ; INPUT    - NONE
0000133E                           414  ; OUTPUT   - NONE
0000133E                           415  ; MODIFIES - NONE
0000133E                           416  ; -----------------------------------------------------------------------------
0000133E  4279 0000259E            417              CLR     (RNGXINDEX)
00001344  4279 000025A0            418              CLR     (RNGYINDEX)
0000134A                           419  
0000134A  4E75                     420              RTS
0000134C                           421  ; -----------------------------------------------------------------------------
0000134C                           422  RNGX
0000134C                           423  ; PROVIDES A PSEUDO-RANDOM BYTE
0000134C                           424  ; INPUT    - NONE
0000134C                           425  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
0000134C                           426  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000134C                           427  ; -----------------------------------------------------------------------------
0000134C  2F08                     428              MOVE.L  A0,-(A7)
0000134E                           429  
0000134E  41F8 1250                430              LEA     XVALUES, A0
00001352  4280                     431              CLR.L   D0
00001354                           432              
00001354  1039 0000259E            433              MOVE.B  (RNGXINDEX), D0
0000135A  E348                     434              LSL.W   #1, D0     
0000135C  D0C0                     435              ADD.W   D0, A0
0000135E  3010                     436              MOVE.W  (A0), D0
00001360  5239 0000259E            437              ADDQ.B  #1, (RNGXINDEX)
00001366  0C79 3A00 0000259E       438              CMP     #$3A00, (RNGXINDEX)
0000136E  6600 0008                439              BNE     .NOVERFLOW     
00001372  4279 0000259E            440              CLR     (RNGXINDEX)
00001378                           441  .NOVERFLOW            
00001378  205F                     442              MOVE.L  (A7)+, A0
0000137A  4E75                     443              RTS
0000137C                           444  
0000137C                           445  RNGY
0000137C                           446  ; PROVIDES A PSEUDO-RANDOM BYTE
0000137C                           447  ; INPUT    - NONE
0000137C                           448  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
0000137C                           449  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000137C                           450  ; -----------------------------------------------------------------------------
0000137C  2F08                     451              MOVE.L  A0,-(A7)
0000137E                           452  
0000137E  41F8 12C8                453              LEA     YVALUES, A0
00001382  4280                     454              CLR.L   D0
00001384                           455              
00001384  1039 000025A0            456              MOVE.B  (RNGYINDEX), D0
0000138A  E348                     457              LSL.W   #1, D0  
0000138C  D0C0                     458              ADD.W   D0, A0
0000138E  3010                     459              MOVE.W  (A0), D0
00001390  5239 000025A0            460              ADDQ.B  #1, (RNGYINDEX)
00001396  0C79 3A00 000025A0       461              CMP     #$3A00, (RNGYINDEX)
0000139E  6600 0008                462              BNE     .NOVERFLOW
000013A2  4279 000025A0            463              CLR     (RNGYINDEX)
000013A8                           464  .NOVERFLOW
000013A8  205F                     465              MOVE.L  (A7)+, A0
000013AA  4E75                     466              RTS
000013AC                           467  
000013AC                           468  ; UPDATE RANDOM VALUES TO HAVE ONLY CENTER VALUES OF THE "GRID"
000013AC                           469  -------------------- end include --------------------
000013AC                           470              INCLUDE "PLAYER.X68"            ; PLAYER MANAGER
000013AC                           471  ; =============================================================================
000013AC                           472  ; TITLE    : PLAYER MANAGER
000013AC                           473  ; AUTHOR   : 
000013AC                           474  ; COMMENTS : 
000013AC                           475  ; =============================================================================
000013AC                           476  
000013AC                           477  
000013AC                           478  PLAYERINIT
000013AC  33FC 0140 000024C2       479              MOVE.W #SCRWIDTH/2, (PLAYERX)       ; SET PLAYER TO CENTER
000013B4  33FC 00F0 000024C4       480              MOVE.W #SCRHEIGH/2, (PLAYERY)       ; SET PLAYER TO CENTER
000013BC  4E75                     481              RTS
000013BE                           482  
000013BE                           483  PLAYERUPDT  
000013BE  0839 0000 00001810       484              BTST.B  #KBDBITLF, (KBDVAL)         ; LEFT KEY PRESSED
000013C6  6600 0028                485              BNE     .MOVEL
000013CA  0839 0002 00001810       486              BTST.B  #KBDBITRT, (KBDVAL)         ; RIGHT KEY PRESSED
000013D2  6600 0034                487              BNE     .MOVER
000013D6  0839 0001 00001810       488              BTST.B  #KBDBITUP, (KBDVAL)         ; UP KEY PRESSED
000013DE  6600 0040                489              BNE     .MOVEU
000013E2  0839 0003 00001810       490              BTST.B  #KBDBITDN, (KBDVAL)         ; DOWN KEY PRESSED
000013EA  6600 004C                491              BNE     .MOVED
000013EE  4E75                     492              RTS
000013F0                           493  .MOVEL
000013F0  0C79 0070 000024C2       494              CMP.W   #TILEDIM/2+(SCRWIDTH-SCRHEIGH)-64, (PLAYERX)       ; LEFT BOUNDARY
000013F8  6E00 0004                495              BGT     .RMVEL
000013FC  4E75                     496              RTS
000013FE                           497  .RMVEL
000013FE  0479 0020 000024C2       498              SUB.W   #TILEDIM, (PLAYERX)         ; MOVE LEFT
00001406  4E75                     499              RTS
00001408                           500  
00001408                           501  .MOVER
00001408  0C79 020F 000024C2       502              CMP.W   #SCRHEIGH-1-TILEDIM/2+64, (PLAYERX)    ; RIGHT BOUNDARY
00001410  6D00 0004                503              BLT     .RMVER
00001414  4E75                     504              RTS
00001416                           505  .RMVER
00001416  0679 0020 000024C2       506              ADD.W   #TILEDIM, (PLAYERX)         ; MOVE RIGHT
0000141E  4E75                     507              RTS
00001420                           508  
00001420                           509  .MOVEU
00001420  0C79 0010 000024C4       510              CMP.W   #TILEDIM/2, (PLAYERY)       ; TOP BOUNDARY
00001428  6E00 0004                511              BGT     .RMVEU
0000142C  4E75                     512              RTS
0000142E                           513  .RMVEU
0000142E  0479 0020 000024C4       514              SUB.W   #TILEDIM, (PLAYERY)         ; MOVE UP
00001436  4E75                     515              RTS
00001438                           516  
00001438                           517  .MOVED
00001438  0C79 01CF 000024C4       518              CMP.W   #SCRHEIGH-1-TILEDIM/2, (PLAYERY)    ; BOTTOM BOUNDARY
00001440  6D00 0004                519              BLT     .RMVED
00001444  4E75                     520              RTS
00001446                           521  .RMVED
00001446  0679 0020 000024C4       522              ADD.W   #TILEDIM, (PLAYERY)         ; MOVE DOWN
0000144E  4E75                     523              RTS
00001450                           524  
00001450                           525  PLAYERPLOT
00001450  48E7 F800                526              MOVEM.L D0-D4, -(A7)
00001454  103C 0050                527              MOVE.B  #80, D0                     ; SET PEN CALL
00001458  223C 00CCE0EA            528              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
0000145E  4E4F                     529              TRAP    #15                         
00001460                           530              
00001460  5240                     531              ADDQ.W  #1, D0                      ; SET FILL CALL
00001462  223C 00CCE0EA            532              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
00001468  4E4F                     533              TRAP    #15
0000146A                           534              
0000146A  3239 000024C2            535              MOVE.W  (PLAYERX), D1               ; D1 = X CENTER
00001470  3439 000024C4            536              MOVE.W  (PLAYERY), D2               ; D1 = Y CENTER
00001476  3601                     537              MOVE.W  D1, D3
00001478  3802                     538              MOVE.W  D2, D4
0000147A  0441 0010                539              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
0000147E  0442 0010                540              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001482  0643 0010                541              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001486  0644 0010                542              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
0000148A                           543  
0000148A  303C 0057                544              MOVE.W  #87, D0
0000148E  4E4F                     545              TRAP    #15
00001490  4CDF 001F                546              MOVEM.L (A7)+,D0-D4
00001494  4E75                     547              RTS
00001496                           548  
00001496                           549  -------------------- end include --------------------
00001496                           550              INCLUDE "MAP.X68"               ; MAP MANAGER
00001496                           551  MAPINIT
00001496  4E75                     552          RTS      
00001498                           553  MAPUPDT
00001498  4E75                     554          RTS
0000149A                           555  MAPPLOT
0000149A  48E7 F800                556          MOVEM.L D0-D4, -(A7)
0000149E                           557  
0000149E  103C 0050                558          MOVE.B  #80, D0                     ; SET PEN CALL
000014A2  223C 00745B6D            559          MOVE.L  #TILEDARK, D1               ; SET PEN COLOR
000014A8  4E4F                     560          TRAP    #15                         
000014AA                           561              
000014AA  5240                     562          ADDQ.W  #1, D0                      ; SET FILL CALL
000014AC  223C 00745B6D            563          MOVE.L  #TILEDARK, D1               ; SET FILL COLOR
000014B2  4E4F                     564          TRAP    #15
000014B4                           565  
000014B4  4241                     566          CLR     D1                          ; LEFT BORDER
000014B6  4242                     567          CLR     D2                      
000014B8  363C 004F                568          MOVE.W  #79, D3
000014BC  383C 01E0                569          MOVE.W  #SCRHEIGH, D4
000014C0  303C 0057                570          MOVE.W  #87, D0
000014C4  4E4F                     571          TRAP    #15
000014C6                           572  
000014C6  323C 0231                573          MOVE.W  #561, D1                    ; RIGHT BORDER                                
000014CA  363C 0280                574          MOVE.W  #SCRWIDTH, D3
000014CE  4E4F                     575          TRAP    #15
000014D0                           576  
000014D0  4240                     577          CLR     D0
000014D2  4241                     578          CLR     D1
000014D4                           579  
000014D4  103C 0050                580          MOVE.B  #80, D0                     ; SET PEN CALL
000014D8  223C 00A38099            581          MOVE.L  #TILEDETA, D1               ; SET PEN COLOR
000014DE  4E4F                     582          TRAP    #15                         
000014E0                           583              
000014E0  5240                     584          ADDQ.W  #1, D0                      ; SET FILL CALL
000014E2  223C 00A38099            585          MOVE.L  #TILEDETA, D1               ; SET FILL COLOR
000014E8  4E4F                     586          TRAP    #15
000014EA                           587  
000014EA  323C 0091                588          MOVE.W  #145, D1                    ; FLOOR                      
000014EE  363C 01EF                589          MOVE.W  #495, D3
000014F2  4E4F                     590          TRAP    #15
000014F4  4CDF 001F                591          MOVEM.L (A7)+,D0-D4
000014F8                           592  
000014F8  4E75                     593          RTS
000014F8  4E75                     594  -------------------- end include --------------------
000014FA                           595              INCLUDE "KEY.X68"               ; KEY MANAGER
000014FA                           596  KEYINIT             ; RANDOM POSITION
000014FA  2F00                     597              MOVE.L D0, -(A7)
000014FC  4EB8 134C                598              JSR     RNGX
00001500  33C0 000024C6            599              MOVE.W  D0, (KEYX)
00001506  4EB8 137C                600              JSR     RNGY
0000150A  33C0 000024C8            601              MOVE.W  D0, (KEYY)
00001510  201F                     602              MOVE.L  (A7)+, D0
00001512  4E75                     603              RTS
00001514                           604  KEYUPDT             ; NOTHING
00001514  48E7 8000                605              MOVEM.L D0, -(A7)
00001518  3039 000024C6            606              MOVE.W  (KEYX), D0
0000151E  B079 000024C2            607              CMP.W   (PLAYERX), D0
00001524  6600 001A                608              BNE     .END
00001528  3039 000024C8            609              MOVE.W  (KEYY), D0
0000152E  B079 000024C4            610              CMP.W   (PLAYERY), D0
00001534  6600 000A                611              BNE     .END
00001538  13FC 0001 0000259A       612              MOVE.B  #1, (KEYOBTEINED)           ; THE PLAYER IS IN THE POSITION OF THE KEY
00001540                           613  .END
00001540  4CDF 0001                614              MOVEM.L (A7)+, D0
00001544  4E75                     615              RTS
00001546                           616  
00001546                           617  KEYPLOT             ; LIGHT BORDERED CIRCLE
00001546  0C39 0001 0000259A       618              CMP.B   #1, (KEYOBTEINED)
0000154E  6700 003C                619              BEQ     .NOKEY
00001552  48E7 F800                620              MOVEM.L D0-D4, -(A7)
00001556  103C 0050                621              MOVE.B  #80, D0                     ; SET PEN CALL
0000155A  223C 00CCE0EA            622              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
00001560  4E4F                     623              TRAP    #15                         
00001562                           624              
00001562  3239 000024C6            625              MOVE.W  (KEYX), D1               ; D1 = X CENTER
00001568  3439 000024C8            626              MOVE.W  (KEYY), D2               ; D1 = Y CENTER
0000156E  3601                     627              MOVE.W  D1, D3
00001570  3802                     628              MOVE.W  D2, D4
00001572  0441 0010                629              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001576  0442 0010                630              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
0000157A  0644 0010                631              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
0000157E  0643 0010                632              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001582                           633  
00001582  303C 005B                634              MOVE.W  #91, D0
00001586  4E4F                     635              TRAP    #15
00001588  4CDF 001F                636              MOVEM.L (A7)+,D0-D4
0000158C                           637  .NOKEY            
0000158C  4E75                     638              RTS
0000158C  4E75                     639  -------------------- end include --------------------
0000158E                           640              INCLUDE "STAIRS.X68"            ; STAIR MANAGER 
0000158E                           641  STAIRSINIT          ; RANDOM POSTION
0000158E  2F00                     642              MOVE.L D0, -(A7)
00001590  4EB8 134C                643              JSR     RNGX
00001594  33C0 000024CA            644              MOVE.W  D0, (STAIRSX)
0000159A  4EB8 137C                645              JSR     RNGY
0000159E  33C0 000024CC            646              MOVE.W  D0, (STAIRSY)
000015A4  201F                     647              MOVE.L  (A7)+, D0
000015A6  4E75                     648              RTS
000015A8                           649  STAIRSUPDT          ; NOTHING
000015A8  48E7 C000                650              MOVEM.L D0-D1, -(A7)
000015AC  3039 000024CA            651              MOVE.W  (STAIRSX), D0
000015B2  B079 000024C2            652              CMP.W   (PLAYERX), D0
000015B8  6600 0058                653              BNE     .END
000015BC  3039 000024CC            654              MOVE.W  (STAIRSY), D0
000015C2  B079 000024C4            655              CMP.W   (PLAYERY), D0
000015C8  6600 0048                656              BNE     .END
000015CC                           657              ; THE PLAYER IS IN THE POSITION OF THE STAIRS
000015CC  0C39 0001 0000259A       658              CMP.B   #1, (KEYOBTEINED)
000015D4  6600 0022                659              BNE     .NOKEY
000015D8  4EB8 14FA                660              JSR     KEYINIT
000015DC  4EB8 158E                661              JSR     STAIRSINIT
000015E0  4EB9 00001676            662              JSR     ENEMYINIT
000015E6  13FC 0000 0000259A       663              MOVE.B  #0, (KEYOBTEINED)
000015EE  5279 000025A2            664              ADDQ.W  #1, (LEVEL)
000015F4  6000 001C                665              BRA     .END
000015F8                           666  .NOKEY      ; SAME POSITION NO KEY
000015F8                           667  
000015F8  303C 0051                668              MOVE.W  #81, D0                      ; SET FILL CALL
000015FC  7200                     669              MOVE.L  #0, D1               ; SET FILL COLOR
000015FE  4E4F                     670              TRAP    #15
00001600                           671  
00001600  43F8 11D6                672              LEA     NOKEYSTRING, A1
00001604  323C 00DC                673              MOVE.W  #SCRWIDTH/2-100, D1
00001608  343C 003C                674              MOVE.W  #SCRHEIGH/8, D2
0000160C                           675  
0000160C  303C 005F                676              MOVE.W #95, D0
00001610  4E4F                     677              TRAP    #15
00001612                           678  
00001612                           679  .END
00001612  4CDF 0003                680              MOVEM.L (A7)+, D0-D1
00001616  4E75                     681              RTS
00001618                           682              
00001618                           683  STAIRSPLOT          ; LIGHT FILLED CIRCLE
00001618                           684             
00001618  48E7 F800                685              MOVEM.L D0-D4, -(A7)
0000161C  103C 0050                686              MOVE.B  #80, D0                     ; SET PEN CALL
00001620  223C 00CCE0EA            687              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
00001626  4E4F                     688              TRAP    #15        
00001628                           689  
00001628  5240                     690              ADDQ.W  #1, D0                      ; SET FILL CALL
0000162A  223C 00CCE0EA            691              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
00001630  4E4F                     692              TRAP    #15                 
00001632                           693              
00001632  3239 000024CA            694              MOVE.W  (STAIRSX), D1               ; D1 = X CENTER
00001638  3439 000024CC            695              MOVE.W  (STAIRSY), D2               ; D1 = Y CENTER
0000163E  3601                     696              MOVE.W  D1, D3
00001640  3802                     697              MOVE.W  D2, D4
00001642  0441 0010                698              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001646  0442 0010                699              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
0000164A  0644 0010                700              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
0000164E  0643 0010                701              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001652                           702              
00001652  0C39 0001 0000259A       703              CMP.B  #1, (KEYOBTEINED)
0000165A  6700 000E                704              BEQ     .KEYOBTEINED
0000165E  303C 0058                705              MOVE.W  #88, D0
00001662  4E4F                     706              TRAP    #15
00001664                           707  
00001664  4CDF 001F                708              MOVEM.L (A7)+,D0-D4
00001668                           709  
00001668  4E75                     710              RTS
0000166A                           711  .KEYOBTEINED
0000166A  303C 005B                712              MOVE.W  #91, D0
0000166E  4E4F                     713              TRAP    #15
00001670                           714  
00001670  4CDF 001F                715              MOVEM.L (A7)+,D0-D4
00001674  4E75                     716              RTS
00001676                           717  
00001676                           718  
00001676                           719  -------------------- end include --------------------
00001676                           720              INCLUDE "ENEMY.X68"             ; ENEMY MANAGER
00001676                           721  ENEMYINIT
00001676  2F00                     722              MOVE.L  D0, -(A7)
00001678  4EB8 134C                723              JSR     RNGX
0000167C  B079 000024C2            724              CMP.W   (PLAYERX), D0   ;CHECK IF THE ENEMY IS ON THE PLAYER, STAIRS O KEY
00001682  6700 FD28                725              BEQ     PLAYERINIT
00001686  B079 000024CA            726              CMP.W   (STAIRSX), D0
0000168C  6700 FD1E                727              BEQ     PLAYERINIT
00001690  B079 000024C6            728              CMP.W   (KEYX), D0
00001696  6700 FD14                729              BEQ     PLAYERINIT
0000169A  33C0 000024CE            730              MOVE.W  D0, (ENEMYX)
000016A0                           731  
000016A0                           732  .INVALIDY
000016A0  4EB8 137C                733              JSR     RNGY
000016A4  B079 000024C4            734              CMP.W   (PLAYERY), D0   ;CHECK IF THE ENEMY IS ON THE PLAYER, STAIRS O KEY
000016AA  67F4                     735              BEQ     .INVALIDY
000016AC  B079 000024CC            736              CMP.W   (STAIRSY), D0
000016B2  67EC                     737              BEQ     .INVALIDY
000016B4  B079 000024C8            738              CMP.W   (KEYY), D0
000016BA  67E4                     739              BEQ     .INVALIDY
000016BC  33C0 000024D0            740              MOVE.W  D0, (ENEMYY)
000016C2                           741  
000016C2  201F                     742              MOVE.L  (A7)+, D0
000016C4  4E75                     743              RTS
000016C6                           744  
000016C6                           745  ENEMYUPDT
000016C6  48E7 E040                746              MOVEM.L D0-D2/A1, -(A7)
000016CA                           747  
000016CA  3039 000024CE            748              MOVE.W  (ENEMYX), D0
000016D0  B079 000024C2            749              CMP.W   (PLAYERX), D0
000016D6  6600 0020                750              BNE     .END
000016DA  3039 000024D0            751              MOVE.W  (ENEMYY), D0
000016E0  B079 000024C4            752              CMP.W   (PLAYERY), D0
000016E6  6600 0010                753              BNE     .END
000016EA                           754              ; THE PLAYER IS IN THE POSITION OF THE STAIRS
000016EA                           755              
000016EA  303C 0051                756              MOVE.W  #81, D0                      ; SET FILL CALL
000016EE  7200                     757              MOVE.L  #0, D1                       ; SET FILL COLOR
000016F0  4E4F                     758              TRAP    #15   
000016F2                           759              
000016F2  4EB9 0000175C            760              JSR     DEATH
000016F8                           761              
000016F8                           762  .END
000016F8  4CDF 0207                763              MOVEM.L (A7)+, D0-D2/A1
000016FC  4E75                     764              RTS
000016FE                           765  ENEMYPLOT
000016FE  48E7 F800                766              MOVEM.L D0-D4, -(A7)
00001702  103C 0050                767              MOVE.B  #80, D0                     ; SET PEN CALL
00001706  223C 00A38099            768              MOVE.L  #TILEDETA, D1               ; SET PEN COLOR
0000170C  4E4F                     769              TRAP    #15                         
0000170E                           770              
0000170E  5240                     771              ADDQ.W  #1, D0                      ; SET FILL CALL
00001710  223C 00A38099            772              MOVE.L  #TILEDETA, D1               ; SET FILL COLOR
00001716  4E4F                     773              TRAP    #15
00001718                           774              
00001718  3239 000024CE            775              MOVE.W  (ENEMYX), D1               ; D1 = X CENTER
0000171E  3439 000024D0            776              MOVE.W  (ENEMYY), D2               ; D1 = Y CENTER
00001724  3601                     777              MOVE.W  D1, D3
00001726  3802                     778              MOVE.W  D2, D4
00001728  0441 0010                779              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
0000172C  0442 0010                780              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001730  0644 0010                781              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001734  0643 0010                782              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001738                           783  
00001738  303C 0057                784              MOVE.W  #87, D0
0000173C  4E4F                     785              TRAP    #15
0000173E  4CDF 001F                786              MOVEM.L (A7)+,D0-D4
00001742  4E75                     787              RTS
00001742  4E75                     788  -------------------- end include --------------------
00001744                           789              INCLUDE "LIFE.X68"              ; LIFE MANAGER
00001744                           790  LIFEINIT
00001744  33FC 0003 000024C0       791          MOVE.W  #3, (PLAYERL)   ; SET PLAYER LIVES TO X, IN THIS CASE 3+
0000174C  4E75                     792          RTS
0000174E                           793  LIFEUPDT
0000174E  0C79 0000 000024C0       794          CMP.W   #0, (PLAYERL)   ; CHECK IF THE PLAYER IS DEAD
00001756  6700 0004                795          BEQ     DEATH
0000175A  4E75                     796          RTS
0000175C                           797  
0000175C                           798  DEATH      ; PLAYER HAS 0 LIVES
0000175C                           799  
0000175C                           800              ; -- BLACK SQUARE ---
0000175C  103C 0050                801          MOVE.B  #80, D0                     ; SET PEN CALL
00001760  7200                     802          MOVE.L  #0, D1               ; SET PEN COLOR
00001762  4E4F                     803          TRAP    #15                         
00001764                           804          
00001764  5240                     805          ADDQ.W  #1, D0                      ; SET FILL CALL
00001766  7200                     806          MOVE.L  #0, D1               ; SET FILL COLOR
00001768  4E4F                     807          TRAP    #15
0000176A                           808          
0000176A  323C 0000                809          MOVE.W  #0, D1               ; D1 = X CENTER
0000176E  343C 0000                810          MOVE.W  #0, D2               ; D1 = Y CENTER
00001772  363C 0280                811          MOVE.W  #SCRWIDTH, D3
00001776  383C 01E0                812          MOVE.W  #SCRHEIGH, D4
0000177A                           813  
0000177A  303C 0057                814          MOVE.W  #87, D0
0000177E  4E4F                     815          TRAP    #15
00001780                           816  
00001780                           817          ; --- TEXT ---
00001780  303C 0051                818          MOVE.W  #81, D0                      ; SET FILL CALL
00001784  7200                     819          MOVE.L  #0, D1                       ; SET TEXT FILL COLOR
00001786  4E4F                     820          TRAP    #15
00001788                           821  
00001788  43F8 11F0                822          LEA     DEATHSTRING, A1
0000178C  323C 005A                823          MOVE.W  #SCRWIDTH/2-230, D1             ; CENTER 
00001790  343C 00A0                824          MOVE.W  #SCRHEIGH/3, D2             ; CENTER
00001794                           825  
00001794  303C 005F                826          MOVE.W  #95, D0
00001798  4E4F                     827          TRAP    #15
0000179A                           828  
0000179A  43F8 1214                829          LEA     SUSSERTOD, A1
0000179E  323C 005A                830          MOVE.W  #SCRWIDTH/2-230, D1             ; CENTER 
000017A2  343C 00F0                831          MOVE.W  #SCRHEIGH/2, D2             ; CENTER
000017A6                           832  
000017A6  303C 005F                833          MOVE.W  #95, D0
000017AA  4E4F                     834          TRAP    #15
000017AC                           835  
000017AC  4E41                     836          TRAP    #SCRTRAP                ; SHOW GRAPHICS
000017AE  4EB9 0000180C            837          JSR     LOOSE
000017AE  4EB9 0000180C            838  -------------------- end include --------------------
000017B4                           839  
000017B4                           840  ; --- INITIALIZE --------------------------------------------------------------
000017B4                           841  
000017B4  4EB8 1000                842  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
000017B8                           843  
000017B8                           844              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
000017B8  4EB8 133E                845              JSR     RNDINIT
000017BC  4EB8 13AC                846              JSR     PLAYERINIT
000017C0  4EB8 14FA                847              JSR     KEYINIT
000017C4  4EB8 158E                848              JSR     STAIRSINIT
000017C8  4EB8 1676                849              JSR     ENEMYINIT
000017CC  4EB8 1744                850              JSR     LIFEINIT
000017D0                           851              
000017D0                           852  ; --- UPDATE ------------------------------------------------------------------
000017D0                           853  
000017D0  4E40                     854  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
000017D2                           855  
000017D2                           856              ; TO DO : ADD YOUR GAME UPDATE HERE
000017D2                           857              
000017D2  4EB8 13BE                858              JSR     PLAYERUPDT
000017D6  4EB8 1514                859              JSR     KEYUPDT
000017DA  4EB8 15A8                860              JSR     STAIRSUPDT
000017DE  4EB8 16C6                861              JSR     ENEMYUPDT
000017E2  4EB8 174E                862              JSR     LIFEUPDT
000017E6                           863  ; --- WAIT SYNCH --------------------------------------------------------------
000017E6                           864  
000017E6  4A39 00001812            865  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000017EC  67F8                     866              BEQ     .WINT
000017EE  4239 00001812            867              CLR.B   (SCRINTCT)
000017F4                           868  
000017F4                           869  ; --- PLOT --------------------------------------------------------------------
000017F4                           870  
000017F4                           871              ; TO DO : ADD YOUR GAME PLOT HERE
000017F4                           872              
000017F4  4EB8 149A                873              JSR     MAPPLOT
000017F8  4EB8 1450                874              JSR     PLAYERPLOT
000017FC  4EB8 1546                875              JSR     KEYPLOT
00001800  4EB8 1618                876              JSR     STAIRSPLOT
00001804  4EB8 16FE                877              JSR     ENEMYPLOT
00001808                           878              
00001808                           879  
00001808  4E41                     880              TRAP    #SCRTRAP                ; SHOW GRAPHICS
0000180A  60C4                     881              BRA     .LOOP                   ; MAIN LOOP
0000180C                           882  
0000180C                           883  ; --- DEATH -------------------------------------------------------------------
0000180C                           884  LOOSE
0000180C  FFFF FFFF                885              SIMHALT
00001810                           886  
00001810                           887  ; --- VARIABLES ---------------------------------------------------------------
00001810                           888  
00001810                           889              INCLUDE "SYSVAR.X68"
00001810                           890  ; =============================================================================
00001810                           891  ; TITLE    : SYSTEM VARIABLES
00001810                           892  ; AUTHOR   : ANTONI BURGUERA
00001810                           893  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001810                           894  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001810                           895  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001810                           896  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001810                           897  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001810                           898  ; HISTORY  : XX-XXX-201X - CREATION
00001810                           899  ;            11-OCT-2020 - MINOR CHANGES
00001810                           900  ; =============================================================================
00001810                           901  
00001810                           902  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001810                           903  
00001810                           904  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001811                           905  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001812                           906  
00001812                           907              DS.W    0
00001812                           908  
00001812                           909  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001812                           910  
00001812                           911  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001813                           912  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001814                           913              DS.W    0
00001814                           914  
00001814                           915  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001814                           916  
00001840                           917              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001840                           918  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
000024C0                           919              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
000024C0                           920  -------------------- end include --------------------
000024C0                           921              INCLUDE "VAR.X68"
000024C0                           922  ; =============================================================================
000024C0                           923  ; TITLE    : GAME VARIABLES
000024C0                           924  ; AUTHOR   :
000024C0                           925  ; HISTORY  :
000024C0                           926  ; =============================================================================
000024C0                           927  
000024C0                           928  
000024C0                           929  PLAYERL     DS.W    1   ; PLAYER LIVES
000024C2                           930  
000024C2                           931  PLAYERX     DS.W    1   ; PLAYER X COORDINATE
000024C4                           932  PLAYERY     DS.W    1   ; PLAYER Y COORDINATE
000024C6                           933  
000024C6                           934  KEYX        DS.W    1   ; KEY X COORDINATE
000024C8                           935  KEYY        DS.W    1   ; KEY Y COORDINATE
000024CA                           936  
000024CA                           937  STAIRSX     DS.W    1   ; STAIRS X COORDINATE
000024CC                           938  STAIRSY     DS.W    1   ; STAIRS Y COORDINATE
000024CE                           939  
000024CE                           940  ENEMYX      DS.W    1   ; ENEMY X COORDINATE
000024D0                           941  ENEMYY      DS.W    1   ; ENEMY Y COORDINATE 
000024D2                           942  
000024D2                           943  ENEMYXV     DS.W    ENEMYMAXCNT ; ENEMY X COORDINATE VECTOR
00002536                           944  ENEMYYV     DS.W    ENEMYMAXCNT ; ENEMY Y COORDINATE VECTOR
0000259A                           945  
0000259A                           946  
0000259A= 0000                     947  KEYOBTEINED DC.W    0   ; "BOOLEAN" VALUE, SELF EXPLANATORY 
0000259C                           948  
0000259C= 0000                     949  SOULFRACTUR DC.W    0   ; "BOOLEAN" VALUE TO TAKE CARE OF SOME GRAPHIC IMPLEMENTATION
0000259E                           950  
0000259E                           951  ; NOKEYTIMER  DS.W    1
0000259E                           952  
0000259E                           953  RNGXINDEX   DS.W    1   ; INDEX FOR THE X COORDINATE ON THE PSEUDO RANDOM GENERATOR
000025A0                           954  RNGYINDEX   DS.W    1   ; INDEX FOR THE Y COORDINATE ON THE PSEUDO RANDOM GENERATOR
000025A2                           955  
000025A2= 0000                     956  LEVEL       DC.W    0   ; LEVEL COUNTER
000025A4                           957  
000025A4                           958  
000025A4                           959  
000025A4                           960  
000025A4                           961  
000025A4                           962  
000025A4                           963  -------------------- end include --------------------
000025A4                           964              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
DEATH               175C
DEATHSTRING         11F0
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1840
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
ENEMYINIT           1676
ENEMYINIT:INVALIDY  16A0
ENEMYMAXCNT         32
ENEMYPLOT           16FE
ENEMYUPDT           16C6
ENEMYUPDT:END       16F8
ENEMYX              24CE
ENEMYXV             24D2
ENEMYY              24D0
ENEMYYV             2536
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1811
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1810
KEYINIT             14FA
KEYOBTEINED         259A
KEYPLOT             1546
KEYPLOT:NOKEY       158C
KEYUPDT             1514
KEYUPDT:END         1540
KEYX                24C6
KEYY                24C8
LEVEL               25A2
LIFEINIT            1744
LIFEUPDT            174E
LOOSE               180C
MAPINIT             1496
MAPPLOT             149A
MAPUPDT             1498
NOKEYSTRING         11D6
PLAYERINIT          13AC
PLAYERL             24C0
PLAYERPLOT          1450
PLAYERUPDT          13BE
PLAYERUPDT:MOVED    1438
PLAYERUPDT:MOVEL    13F0
PLAYERUPDT:MOVER    1408
PLAYERUPDT:MOVEU    1420
PLAYERUPDT:RMVED    1446
PLAYERUPDT:RMVEL    13FE
PLAYERUPDT:RMVER    1416
PLAYERUPDT:RMVEU    142E
PLAYERX             24C2
PLAYERY             24C4
RNDINIT             133E
RNGX                134C
RNGX:NOVERFLOW      1378
RNGXINDEX           259E
RNGY                137C
RNGY:NOVERFLOW      13A8
RNGYINDEX           25A0
SCRCYCCT            1813
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1812
SCRIRQ              1
SCRISR              108C
SCRTIM              50
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            280
SOULFRACTUR         259C
STAIRSINIT          158E
STAIRSPLOT          1618
STAIRSPLOT:KEYOBTEINED  166A
STAIRSUPDT          15A8
STAIRSUPDT:END      1612
STAIRSUPDT:NOKEY    15F8
STAIRSX             24CA
STAIRSY             24CC
START               17B4
START:LOOP          17D0
START:WINT          17E6
SUSSERTOD           1214
SYSINIT             1000
TILEDARK            745B6D
TILEDETA            A38099
TILEDIM             20
TILELIGH            CCE0EA
XVALUES             1250
YVALUES             12C8
