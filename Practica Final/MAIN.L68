0000152E Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/25/2020 3:42:23 PM

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9             
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000280                 85  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 86  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000050                 88  SCRTIM      EQU     80                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 93  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 95  -------------------- end include --------------------
00001000                            96              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            97  ; =============================================================================
00001000                            98  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            99  ; AUTHOR   : ANTONI BURGUERA
00001000                           100  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           101  ;            - SYS : GENERIC.
00001000                           102  ;            - SCR : SCREEN MANAGEMENT.
00001000                           103  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           104  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           105  ;            11-OCT-2020 - MINOR CHANGES
00001000                           106  ; =============================================================================
00001000                           107  
00001000                           108  ; -----------------------------------------------------------------------------
00001000                           109  SYSINIT
00001000                           110  ; INITIALIZES THE SYSTEM
00001000                           111  ; INPUT    - NONE
00001000                           112  ; OUTPUT   - NONE
00001000                           113  ; MODIFIES - NONE
00001000                           114  ; -----------------------------------------------------------------------------
00001000  205F                     115              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            116              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            117              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            118              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                119              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     120              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     121              RTS
0000101C                           122  
0000101C                           123  ; =============================================================================
0000101C                           124  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           125  ; =============================================================================
0000101C                           126  
0000101C                           127  ; -----------------------------------------------------------------------------
0000101C                           128  SCRINIT
0000101C                           129  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           130  ; INPUT    - NONE
0000101C                           131  ; OUTPUT   - NONE
0000101C                           132  ; MODIFIES - D0,D1,D2,D3
0000101C                           133  ; -----------------------------------------------------------------------------
0000101C  007C 0700                134              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       135              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 028001E0            136              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                137              MOVE.B  #33,D0
00001032  4E4F                     138              TRAP    #15
00001034  7201                     139              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     140              TRAP    #15
00001038  323C FF00                141              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                142              MOVE.B  #11,D0
00001040  4E4F                     143              TRAP    #15
00001042  123C 0011                144              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                145              MOVE.B  #92,D0
0000104A  4E4F                     146              TRAP    #15
0000104C  323C FF00                147              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                148              MOVE.B  #11,D0
00001054  4E4F                     149              TRAP    #15
00001056  21FC 0000108C 0064       150              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                151              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                152              MOVE.B  #32,D0
00001066  4E4F                     153              TRAP    #15
00001068  143C 0081                154              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0050                155              MOVE.B  #SCRTIM,D3
00001070  123C 0006                156              MOVE.B  #6,D1
00001074  103C 0020                157              MOVE.B  #32,D0
00001078  4E4F                     158              TRAP    #15
0000107A  4239 00001578            159              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001579            160              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                161              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     162              RTS
0000108C                           163  
0000108C                           164  ; -----------------------------------------------------------------------------
0000108C                           165  SCRISR
0000108C                           166  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           167  ; INPUT    - NONE
0000108C                           168  ; OUTPUT   - NONE
0000108C                           169  ; MODIFIES - NONE
0000108C                           170  ; -----------------------------------------------------------------------------
0000108C  5239 00001578            171              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001579            172              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     173              RTE
0000109A                           174  
0000109A                           175  ; -----------------------------------------------------------------------------
0000109A                           176  SCRUPD
0000109A                           177  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           178  ; BUFFER FOR THE NEXT ONE.
0000109A                           179  ; INPUT    - NONE
0000109A                           180  ; OUTPUT   - NONE
0000109A                           181  ; MODIFIES - NONE
0000109A                           182  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                183              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                184              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     185              TRAP    #15
000010A4  323C FF00                186              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                187              MOVE.B  #11,D0
000010AC  4E4F                     188              TRAP    #15
000010AE  4C9F 0003                189              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     190              RTE
000010B4                           191  
000010B4                           192  ; =============================================================================
000010B4                           193  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           194  ; =============================================================================
000010B4                           195  
000010B4                           196  ; -----------------------------------------------------------------------------
000010B4                           197  KBDINIT
000010B4                           198  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           199  ; INPUT    - NONE
000010B4                           200  ; OUTPUT   - NONE
000010B4                           201  ; MODIFIES - NONE
000010B4                           202  ; -----------------------------------------------------------------------------
000010B4  4239 00001576            203              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001577            204              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       205              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     206              RTS
000010CA                           207  
000010CA                           208  ; -----------------------------------------------------------------------------
000010CA                           209  KBDREAD
000010CA                           210  ; TRAP SERVICE ROUTINE.
000010CA                           211  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           212  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           213  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           214  ; INPUT    - NONE
000010CA                           215  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           216  ; MODIFIES - NONE
000010CA                           217  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                218              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                219              MOVE.B  #19,D0
000010D2  223C 50104D20            220              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     221              TRAP    #15
000010DA  6100 002A                222              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            223              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     224              TRAP    #15
000010E6  6100 001E                225              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001576            226              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     227              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     228              AND.B   D2,D0
000010F4  13C2 00001576            229              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001577            230              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                231              MOVEM.L (A7)+,D0-D3
00001104  4E73                     232              RTE
00001106                           233  
00001106  363C 0003                234  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     235  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     236              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                237              DBRA.W  D3,.LOOP
00001112  4E75                     238              RTS
00001114                           239  
00001114                           240  ; =============================================================================
00001114                           241  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           242  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           243  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           244  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           245  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           246  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           247  ; =============================================================================
00001114                           248  
00001114                           249  ; -----------------------------------------------------------------------------
00001114                           250  DMMINIT
00001114                           251  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           252  ; INPUT    - NONE
00001114                           253  ; OUTPUT   - NONE
00001114                           254  ; MODIFIES - NONE
00001114                           255  ; -----------------------------------------------------------------------------
00001114  48E7 8080                256              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001580            257              LEA     DMMDATA,A0
0000111E  303C 0031                258              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                259  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            260              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                261              DBRA.W  D0,.LOOP
00001130  4CDF 0101                262              MOVEM.L (A7)+,D0/A0
00001134  4E75                     263              RTS
00001136                           264  
00001136                           265  ; -----------------------------------------------------------------------------
00001136                           266  DMMFIRST
00001136                           267  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           268  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           269  ; INPUT    - NONE
00001136                           270  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           271  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           272  ; -----------------------------------------------------------------------------
00001136  41F9 00001580            273              LEA     DMMDATA,A0
0000113C  4A58                     274  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                275              BNE     DMMFRFND
00001142  D1FC 0000003E            276              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 000021FF            277  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     278              BLT     DMMFRLOP
00001150  207C 00000000            279              MOVE.L  #0,A0
00001156  4E75                     280  DMMFRFND    RTS
00001158                           281  
00001158                           282  ; -----------------------------------------------------------------------------
00001158                           283  DMMNEXT
00001158                           284  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           285  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           286  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           287  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           288  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           289  ; -----------------------------------------------------------------------------
00001158  2F00                     290              MOVE.L  D0,-(A7)
0000115A  2008                     291              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            292              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            293              ADD.L   #DMMBSIZE,D0
00001168  2040                     294              MOVE.L  D0,A0
0000116A  201F                     295              MOVE.L  (A7)+,D0
0000116C  60DA                     296              BRA     DMMFRCOM
0000116E                           297  
0000116E                           298  ; -----------------------------------------------------------------------------
0000116E                           299  DMMFRSTO
0000116E                           300  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           301  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           302  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           303  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           304  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           305  ; -----------------------------------------------------------------------------
0000116E  41F9 00001580            306              LEA     DMMDATA,A0
00001174  B058                     307  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                308              BEQ     DMMFFND
0000117A  D1FC 0000003E            309              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 000021FF            310  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     311              BLT     DMMFLOOP
00001188  207C 00000000            312              MOVE.L  #0,A0
0000118E  4E75                     313  DMMFFND     RTS
00001190                           314  
00001190                           315  ; -----------------------------------------------------------------------------
00001190                           316  DMMNEXTO
00001190                           317  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           318  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           319  ; INPUT    - D0.W : ID TO SEARCH
00001190                           320  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           321  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           323  ; -----------------------------------------------------------------------------
00001190  2F00                     324              MOVE.L  D0,-(A7)
00001192  2008                     325              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            326              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            327              ADD.L   #DMMBSIZE,D0
000011A0  2040                     328              MOVE.L  D0,A0
000011A2  201F                     329              MOVE.L  (A7)+,D0
000011A4  60DA                     330              BRA     DMMFCOM
000011A6                           331  
000011A6                           332  ; -----------------------------------------------------------------------------
000011A6                           333  DMMALLOC
000011A6                           334  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           335  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           336  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           337  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           339  ; -----------------------------------------------------------------------------
000011A6  3F00                     340              MOVE.W  D0,-(A7)
000011A8  4240                     341              CLR.W   D0
000011AA  4EB8 116E                342              JSR     DMMFRSTO
000011AE  301F                     343              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            344              CMP.L   #0,A0
000011B6  6700 0006                345              BEQ     .END
000011BA  3140 FFFE                346              MOVE.W  D0,-2(A0)
000011BE  4E75                     347  .END        RTS
000011C0                           348  
000011C0                           349  ; -----------------------------------------------------------------------------
000011C0                           350  DMMFREE
000011C0                           351  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           352  ; SYSTEM (0)
000011C0                           353  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           354  ; OUTPUT   - NONE
000011C0                           355  ; MODIFIES - NONE
000011C0                           356  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                357              MOVEM.L D0/A0,-(A7)
000011C4  2008                     358              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            359              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     360              MOVE.L  D0,A0
000011CE  4250                     361              CLR.W   (A0)
000011D0  4CDF 0101                362              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     363              RTS
000011D4  4E75                     364  -------------------- end include --------------------
000011D6                           365              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           366  ; =============================================================================
000011D6                           367  ; TITLE    : GAME CONSTANTS
000011D6                           368  ; AUTHOR   :
000011D6                           369  ; HISTORY  :
000011D6                           370  ; =============================================================================
000011D6  =0000002D                371  CUBCOS    EQU     45                ;LONG OF ONE SIDE OF THE CUBE
000011D6  =00CCE0EA                372  CUBCOLP   EQU     $00CCE0EA         ; COLOR OF THE CUBE
000011D6                           373  
000011D6                           374  ;   TILE
000011D6                           375  
000011D6  =00000020                376  TILEDIM     EQU     32         ; TILE SET DIMENSIONS && PLAYER SPEED
000011D6                           377  
000011D6  =00745B6D                378  TILEDARK    EQU     $00745B6D  ; TILE SET DARK COLOR 
000011D6  =00CCE0EA                379  TILELIGH    EQU     $00CCE0EA  ; TILE SET LIGHT COLOR
000011D6  =00A38099                380  TILEDETA    EQU     $00A38099  ; TILE SET DETAIL COLOR
000011D6                           381  
000011D6= 594F 5520 444F 2...      382  NOKEYSTRING DC.W   'YOU DO NOT HAVE ANY KEYS', 0
000011F0                           383  
000011F0= 0080 01E0 0200 0...      384  XVALUES     DC.W    $80, $1E0, $200, $1A0, $C0, $A0, $180, $E0, $60, $100
00001204= 0220 0120 01C0 0...      385              DC.W    $220, $120, $1C0, $140, $160
0000120E                           386  
0000120E= 00B0 0150 0030 0...      387  YVALUES     DC.W    $B0, $150, $30, $10, $F0, $70, $90, $50, $D0, $190
00001222= 01D0 0130 0170 0...      388              DC.W    $1D0, $130, $170, $1B0, $110
0000122C                           389  
0000122C                           390  -------------------- end include --------------------
0000122C                           391              INCLUDE "RANDOM.X68"            ; PSEUDO - RANDOM GENERATOR
0000122C                           392  ; =============================================================================
0000122C                           393  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
0000122C                           394  ; AUTHOR   : ANTONI BURGUERA
0000122C                           395  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
0000122C                           396  ; HISTORY  : XX-XXX-201X - CREATION
0000122C                           397  ;            11-OCT-2020 - MINOR CHANGES
0000122C                           398  ; =============================================================================
0000122C                           399  
0000122C                           400  ; -----------------------------------------------------------------------------
0000122C                           401  RNDINIT
0000122C                           402  ; INITIALIZES RANDOM NUMBER GENERATOR
0000122C                           403  ; INPUT    - NONE
0000122C                           404  ; OUTPUT   - NONE
0000122C                           405  ; MODIFIES - NONE
0000122C                           406  ; -----------------------------------------------------------------------------
0000122C  4279 00002210            407              CLR     (RNGXINDEX)
00001232  4279 00002212            408              CLR     (RNGYINDEX)
00001238                           409  
00001238  4E75                     410              RTS
0000123A                           411  ; -----------------------------------------------------------------------------
0000123A                           412  RNGX
0000123A                           413  ; PROVIDES A PSEUDO-RANDOM BYTE
0000123A                           414  ; INPUT    - NONE
0000123A                           415  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
0000123A                           416  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000123A                           417  ; -----------------------------------------------------------------------------
0000123A  2F08                     418              MOVE.L  A0,-(A7)
0000123C                           419  
0000123C  41F8 11F0                420              LEA     XVALUES, A0
00001240  4280                     421              CLR.L   D0
00001242                           422              
00001242  1039 00002210            423              MOVE.B  (RNGXINDEX), D0
00001248  E348                     424              LSL.W   #1, D0     
0000124A  D0C0                     425              ADD.W   D0, A0
0000124C  3010                     426              MOVE.W  (A0), D0
0000124E  5239 00002210            427              ADDQ.B  #1, (RNGXINDEX)
00001254                           428              
00001254  205F                     429              MOVE.L  (A7)+, A0
00001256  4E75                     430              RTS
00001258                           431  
00001258                           432  RNGY
00001258                           433  ; PROVIDES A PSEUDO-RANDOM BYTE
00001258                           434  ; INPUT    - NONE
00001258                           435  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
00001258                           436  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001258                           437  ; -----------------------------------------------------------------------------
00001258  2F08                     438              MOVE.L  A0,-(A7)
0000125A                           439  
0000125A  41F8 120E                440              LEA     YVALUES, A0
0000125E  4280                     441              CLR.L   D0
00001260                           442              
00001260  1039 00002212            443              MOVE.B  (RNGYINDEX), D0
00001266  E348                     444              LSL.W   #1, D0  
00001268  D0C0                     445              ADD.W   D0, A0
0000126A  3010                     446              MOVE.W  (A0), D0
0000126C  5239 00002212            447              ADDQ.B  #1, (RNGYINDEX)
00001272  205F                     448              MOVE.L  (A7)+, A0
00001274  4E75                     449              RTS
00001276                           450  
00001276                           451  ; UPDATE RANDOM VALUES TO HAVE ONLY CENTER VALUES OF THE "GRID"
00001276                           452  -------------------- end include --------------------
00001276                           453              INCLUDE "PLAYER.X68"            ; PLAYER MANAGER
00001276                           454  ; =============================================================================
00001276                           455  ; TITLE    : PLAYER MANAGER
00001276                           456  ; AUTHOR   : 
00001276                           457  ; COMMENTS : 
00001276                           458  ; =============================================================================
00001276                           459  
00001276                           460  
00001276                           461  PLAYERINIT
00001276  33FC 0140 00002200       462              MOVE.W #SCRWIDTH/2, (PLAYERX)       ; SET PLAYER TO CENTER
0000127E  33FC 00F0 00002202       463              MOVE.W #SCRHEIGH/2, (PLAYERY)       ; SET PLAYER TO CENTER
00001286  4E75                     464              RTS
00001288                           465  
00001288                           466  PLAYERUPDT
00001288  0839 0000 00001576       467              BTST.B  #KBDBITLF, (KBDVAL)         ; LEFT KEY PRESSED
00001290  6600 0028                468              BNE     .MOVEL
00001294  0839 0002 00001576       469              BTST.B  #KBDBITRT, (KBDVAL)         ; RIGHT KEY PRESSED
0000129C  6600 0034                470              BNE     .MOVER
000012A0  0839 0001 00001576       471              BTST.B  #KBDBITUP, (KBDVAL)         ; UP KEY PRESSED
000012A8  6600 0040                472              BNE     .MOVEU
000012AC  0839 0003 00001576       473              BTST.B  #KBDBITDN, (KBDVAL)         ; DOWN KEY PRESSED
000012B4  6600 004C                474              BNE     .MOVED
000012B8  4E75                     475              RTS
000012BA                           476  .MOVEL
000012BA  0C79 0070 00002200       477              CMP.W   #TILEDIM/2+(SCRWIDTH-SCRHEIGH)-64, (PLAYERX)       ; LEFT BOUNDARY
000012C2  6E00 0004                478              BGT     .RMVEL
000012C6  4E75                     479              RTS
000012C8                           480  .RMVEL
000012C8  0479 0020 00002200       481              SUB.W   #TILEDIM, (PLAYERX)         ; MOVE LEFT
000012D0  4E75                     482              RTS
000012D2                           483  
000012D2                           484  .MOVER
000012D2  0C79 020F 00002200       485              CMP.W   #SCRHEIGH-1-TILEDIM/2+64, (PLAYERX)    ; RIGHT BOUNDARY
000012DA  6D00 0004                486              BLT     .RMVER
000012DE  4E75                     487              RTS
000012E0                           488  .RMVER
000012E0  0679 0020 00002200       489              ADD.W   #TILEDIM, (PLAYERX)         ; MOVE RIGHT
000012E8  4E75                     490              RTS
000012EA                           491  
000012EA                           492  .MOVEU
000012EA  0C79 0010 00002202       493              CMP.W   #TILEDIM/2, (PLAYERY)       ; TOP BOUNDARY
000012F2  6E00 0004                494              BGT     .RMVEU
000012F6  4E75                     495              RTS
000012F8                           496  .RMVEU
000012F8  0479 0020 00002202       497              SUB.W   #TILEDIM, (PLAYERY)         ; MOVE UP
00001300  4E75                     498              RTS
00001302                           499  
00001302                           500  .MOVED
00001302  0C79 01CF 00002202       501              CMP.W   #SCRHEIGH-1-TILEDIM/2, (PLAYERY)    ; BOTTOM BOUNDARY
0000130A  6D00 0004                502              BLT     .RMVED
0000130E  4E75                     503              RTS
00001310                           504  .RMVED
00001310  0679 0020 00002202       505              ADD.W   #TILEDIM, (PLAYERY)         ; MOVE DOWN
00001318  4E75                     506              RTS
0000131A                           507  
0000131A                           508  PLAYERPLOT
0000131A  48E7 F800                509              MOVEM.L D0-D4, -(A7)
0000131E  103C 0050                510              MOVE.B  #80, D0                     ; SET PEN CALL
00001322  223C 00CCE0EA            511              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
00001328  4E4F                     512              TRAP    #15                         
0000132A                           513              
0000132A  5240                     514              ADDQ.W  #1, D0                      ; SET FILL CALL
0000132C  223C 00CCE0EA            515              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
00001332  4E4F                     516              TRAP    #15
00001334                           517              
00001334  3239 00002200            518              MOVE.W  (PLAYERX), D1               ; D1 = X CENTER
0000133A  3439 00002202            519              MOVE.W  (PLAYERY), D2               ; D1 = Y CENTER
00001340  3601                     520              MOVE.W  D1, D3
00001342  3802                     521              MOVE.W  D2, D4
00001344  0441 0010                522              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001348  0442 0010                523              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
0000134C  0644 0010                524              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001350  0643 0010                525              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001354                           526  
00001354  303C 0057                527              MOVE.W  #87, D0
00001358  4E4F                     528              TRAP    #15
0000135A  4CDF 001F                529              MOVEM.L (A7)+,D0-D4
0000135E  4E75                     530              RTS
0000135E  4E75                     531  -------------------- end include --------------------
00001360                           532              INCLUDE "MAP.X68"               ; MAP MANAGER
00001360                           533  MAPINIT
00001360  4E75                     534          RTS      
00001362                           535  MAPUPDT
00001362  4E75                     536          RTS
00001364                           537  MAPPLOT
00001364  48E7 F800                538          MOVEM.L D0-D4, -(A7)
00001368                           539  
00001368  103C 0050                540          MOVE.B  #80, D0                     ; SET PEN CALL
0000136C  223C 00745B6D            541          MOVE.L  #TILEDARK, D1               ; SET PEN COLOR
00001372  4E4F                     542          TRAP    #15                         
00001374                           543              
00001374  5240                     544          ADDQ.W  #1, D0                      ; SET FILL CALL
00001376  223C 00745B6D            545          MOVE.L  #TILEDARK, D1               ; SET FILL COLOR
0000137C  4E4F                     546          TRAP    #15
0000137E                           547  
0000137E  4241                     548          CLR     D1                          ; LEFT BORDER
00001380  4242                     549          CLR     D2                      
00001382  363C 004F                550          MOVE.W  #79, D3
00001386  383C 01E0                551          MOVE.W  #SCRHEIGH, D4
0000138A  303C 0057                552          MOVE.W  #87, D0
0000138E  4E4F                     553          TRAP    #15
00001390                           554  
00001390  323C 0231                555          MOVE.W  #561, D1                    ; RIGHT BORDER                                
00001394  363C 0280                556          MOVE.W  #SCRWIDTH, D3
00001398  4E4F                     557          TRAP    #15
0000139A                           558  
0000139A  4240                     559          CLR     D0
0000139C  4241                     560          CLR     D1
0000139E                           561  
0000139E  103C 0050                562          MOVE.B  #80, D0                     ; SET PEN CALL
000013A2  223C 00A38099            563          MOVE.L  #TILEDETA, D1               ; SET PEN COLOR
000013A8  4E4F                     564          TRAP    #15                         
000013AA                           565              
000013AA  5240                     566          ADDQ.W  #1, D0                      ; SET FILL CALL
000013AC  223C 00A38099            567          MOVE.L  #TILEDETA, D1               ; SET FILL COLOR
000013B2  4E4F                     568          TRAP    #15
000013B4                           569  
000013B4  323C 0091                570          MOVE.W  #145, D1                    ; FLOOR                      
000013B8  363C 01EF                571          MOVE.W  #495, D3
000013BC  4E4F                     572          TRAP    #15
000013BE  4CDF 001F                573          MOVEM.L (A7)+,D0-D4
000013C2                           574  
000013C2  4E75                     575          RTS
000013C2  4E75                     576  -------------------- end include --------------------
000013C4                           577              INCLUDE "KEY.X68"               ; KEY MANAGER
000013C4                           578  KEYINIT             ; RANDOM POSITION
000013C4  2F00                     579              MOVE.L D0, -(A7)
000013C6  4EB8 123A                580              JSR     RNGX
000013CA  33C0 00002204            581              MOVE.W  D0, (KEYX)
000013D0  4EB8 1258                582              JSR     RNGY
000013D4  33C0 00002206            583              MOVE.W  D0, (KEYY)
000013DA  201F                     584              MOVE.L  (A7)+, D0
000013DC  4E75                     585              RTS
000013DE                           586  KEYUPDT             ; NOTHING
000013DE  48E7 8000                587              MOVEM.L D0, -(A7)
000013E2  3039 00002204            588              MOVE.W  (KEYX), D0
000013E8  B079 00002200            589              CMP.W   (PLAYERX), D0
000013EE  6600 001A                590              BNE     .END
000013F2  3039 00002206            591              MOVE.W  (KEYY), D0
000013F8  B079 00002202            592              CMP.W   (PLAYERY), D0
000013FE  6600 000A                593              BNE     .END
00001402  13FC 0001 0000220C       594              MOVE.B  #1, (KEYOBTEINED)           ; THE PLAYER IS IN THE POSITION OF THE KEY
0000140A                           595  .END
0000140A  4CDF 0001                596              MOVEM.L (A7)+, D0
0000140E  4E75                     597              RTS
00001410                           598  
00001410                           599  KEYPLOT             ; LIGHT BORDERED CIRCLE
00001410  0C39 0001 0000220C       600              CMP.B   #1, (KEYOBTEINED)
00001418  6700 003C                601              BEQ     .NOKEY
0000141C  48E7 F800                602              MOVEM.L D0-D4, -(A7)
00001420  103C 0050                603              MOVE.B  #80, D0                     ; SET PEN CALL
00001424  223C 00CCE0EA            604              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
0000142A  4E4F                     605              TRAP    #15                         
0000142C                           606              
0000142C  3239 00002204            607              MOVE.W  (KEYX), D1               ; D1 = X CENTER
00001432  3439 00002206            608              MOVE.W  (KEYY), D2               ; D1 = Y CENTER
00001438  3601                     609              MOVE.W  D1, D3
0000143A  3802                     610              MOVE.W  D2, D4
0000143C  0441 0010                611              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001440  0442 0010                612              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001444  0644 0010                613              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001448  0643 0010                614              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
0000144C                           615  
0000144C  303C 005B                616              MOVE.W  #91, D0
00001450  4E4F                     617              TRAP    #15
00001452  4CDF 001F                618              MOVEM.L (A7)+,D0-D4
00001456                           619  .NOKEY            
00001456  4E75                     620              RTS
00001456  4E75                     621  -------------------- end include --------------------
00001458                           622              INCLUDE "STAIRS.X68"            ; STAIR MANAGER 
00001458                           623  STAIRSINIT          ; RANDOM POSTION
00001458  33FC 0120 00002208       624              MOVE.W #SCRWIDTH/2-32, (STAIRSX)       ; SET PLAYER TO CENTER
00001460  33FC 00D0 0000220A       625              MOVE.W #SCRHEIGH/2-32, (STAIRSY)       ; SET PLAYER TO CENTER
00001468  4E75                     626              RTS
0000146A                           627  STAIRSUPDT          ; NOTHING
0000146A  48E7 C000                628              MOVEM.L D0-D1, -(A7)
0000146E  3039 00002208            629              MOVE.W  (STAIRSX), D0
00001474  B079 00002200            630              CMP.W   (PLAYERX), D0
0000147A  6600 004C                631              BNE     .END
0000147E  3039 0000220A            632              MOVE.W  (STAIRSY), D0
00001484  B079 00002202            633              CMP.W   (PLAYERY), D0
0000148A  6600 003C                634              BNE     .END
0000148E                           635              ; THE PLAYER IS IN THE POSITION OF THE STAIRS
0000148E  0C39 0001 0000220C       636              CMP.B   #1, (KEYOBTEINED)
00001496  6600 0016                637              BNE     .NOKEY
0000149A  4EB8 13C4                638              JSR     KEYINIT
0000149E  4EB8 1458                639              JSR     STAIRSINIT
000014A2  13FC 0000 0000220C       640              MOVE.B  #0, (KEYOBTEINED)
000014AA  6000 001C                641              BRA     .END
000014AE                           642  .NOKEY      ; SAME POSITION NO KEY
000014AE                           643  
000014AE  303C 0051                644              MOVE.W  #81, D0                      ; SET FILL CALL
000014B2  7200                     645              MOVE.L  #00000000, D1               ; SET FILL COLOR
000014B4  4E4F                     646              TRAP    #15
000014B6                           647  
000014B6  43F8 11D6                648              LEA     NOKEYSTRING, A1
000014BA  323C 00DC                649              MOVE.W  #SCRWIDTH/2-100, D1
000014BE  343C 003C                650              MOVE.W  #SCRHEIGH/8, D2
000014C2                           651  
000014C2  303C 005F                652              MOVE.W #95, D0
000014C6  4E4F                     653              TRAP    #15
000014C8                           654  
000014C8                           655  .END
000014C8  4CDF 0003                656              MOVEM.L (A7)+, D0-D1
000014CC  4E75                     657              RTS
000014CE  4E75                     658              RTS
000014D0                           659  STAIRSPLOT          ; LIGHT FILLED CIRCLE
000014D0                           660             
000014D0  48E7 F800                661              MOVEM.L D0-D4, -(A7)
000014D4  103C 0050                662              MOVE.B  #80, D0                     ; SET PEN CALL
000014D8  223C 00CCE0EA            663              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
000014DE  4E4F                     664              TRAP    #15        
000014E0                           665  
000014E0  5240                     666              ADDQ.W  #1, D0                      ; SET FILL CALL
000014E2  223C 00CCE0EA            667              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
000014E8  4E4F                     668              TRAP    #15                 
000014EA                           669              
000014EA  3239 00002208            670              MOVE.W  (STAIRSX), D1               ; D1 = X CENTER
000014F0  3439 0000220A            671              MOVE.W  (STAIRSY), D2               ; D1 = Y CENTER
000014F6  3601                     672              MOVE.W  D1, D3
000014F8  3802                     673              MOVE.W  D2, D4
000014FA  0441 0010                674              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
000014FE  0442 0010                675              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001502  0644 0010                676              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001506  0643 0010                677              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
0000150A                           678              
0000150A  0C39 0001 0000220C       679              CMP.B  #1, (KEYOBTEINED)
00001512  6700 000E                680              BEQ     .KEYOBTEINED
00001516  303C 0058                681              MOVE.W  #88, D0
0000151A  4E4F                     682              TRAP    #15
0000151C                           683  
0000151C  4CDF 001F                684              MOVEM.L (A7)+,D0-D4
00001520                           685  
00001520  4E75                     686              RTS
00001522                           687  .KEYOBTEINED
00001522  303C 005B                688              MOVE.W  #91, D0
00001526  4E4F                     689              TRAP    #15
00001528                           690  
00001528  4CDF 001F                691              MOVEM.L (A7)+,D0-D4
0000152C  4E75                     692              RTS
0000152E                           693  
0000152E                           694  
0000152E                           695  -------------------- end include --------------------
0000152E                           696  
0000152E                           697  ; --- INITIALIZE --------------------------------------------------------------
0000152E                           698  
0000152E  4EB8 1000                699  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
00001532                           700  
00001532                           701              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
00001532  4EB8 122C                702              JSR     RNDINIT
00001536  4EB8 1276                703              JSR     PLAYERINIT
0000153A  4EB8 13C4                704              JSR     KEYINIT
0000153E  4EB8 1458                705              JSR     STAIRSINIT
00001542                           706  ; --- UPDATE ------------------------------------------------------------------
00001542                           707  
00001542  4E40                     708  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
00001544                           709  
00001544                           710              ; TO DO : ADD YOUR GAME UPDATE HERE
00001544                           711  
00001544  4EB8 1288                712              JSR     PLAYERUPDT
00001548  4EB8 13DE                713              JSR     KEYUPDT
0000154C  4EB8 146A                714              JSR     STAIRSUPDT
00001550                           715  ; --- WAIT SYNCH --------------------------------------------------------------
00001550                           716  
00001550  4A39 00001578            717  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001556  67F8                     718              BEQ     .WINT
00001558  4239 00001578            719              CLR.B   (SCRINTCT)
0000155E                           720  
0000155E                           721  ; --- PLOT --------------------------------------------------------------------
0000155E                           722  
0000155E                           723              ; TO DO : ADD YOUR GAME PLOT HERE
0000155E                           724              
0000155E  4EB8 1364                725              JSR MAPPLOT
00001562  4EB8 131A                726              JSR PLAYERPLOT
00001566  4EB8 1410                727              JSR KEYPLOT
0000156A  4EB8 14D0                728              JSR STAIRSPLOT
0000156E                           729  
0000156E  4E41                     730              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001570  60D0                     731              BRA     .LOOP                   ; MAIN LOOP
00001572  FFFF FFFF                732              SIMHALT
00001576                           733  
00001576                           734  ; --- VARIABLES ---------------------------------------------------------------
00001576                           735  
00001576                           736              INCLUDE "SYSVAR.X68"
00001576                           737  ; =============================================================================
00001576                           738  ; TITLE    : SYSTEM VARIABLES
00001576                           739  ; AUTHOR   : ANTONI BURGUERA
00001576                           740  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001576                           741  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001576                           742  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001576                           743  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001576                           744  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001576                           745  ; HISTORY  : XX-XXX-201X - CREATION
00001576                           746  ;            11-OCT-2020 - MINOR CHANGES
00001576                           747  ; =============================================================================
00001576                           748  
00001576                           749  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001576                           750  
00001576                           751  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001577                           752  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001578                           753  
00001578                           754              DS.W    0
00001578                           755  
00001578                           756  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001578                           757  
00001578                           758  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001579                           759  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
0000157A                           760              DS.W    0
0000157A                           761  
0000157A                           762  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
0000157A                           763  
00001580                           764              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001580                           765  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002200                           766              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002200                           767  -------------------- end include --------------------
00002200                           768              INCLUDE "VAR.X68"
00002200                           769  ; =============================================================================
00002200                           770  ; TITLE    : GAME VARIABLES
00002200                           771  ; AUTHOR   :
00002200                           772  ; HISTORY  :
00002200                           773  ; =============================================================================
00002200                           774  
00002200                           775  ; PLAYER
00002200                           776  PLAYERX     DS.W    1   ; PLAYER X COORDINATE
00002202                           777  PLAYERY     DS.W    1   ; PLAYER Y COORDINATE
00002204                           778  
00002204                           779  KEYX        DS.W    1   ; KEY X COORDINATE
00002206                           780  KEYY        DS.W    1   ; KEY Y COORDINATE
00002208                           781  
00002208                           782  STAIRSX     DS.W    1   ; STARIS X COORDINATE
0000220A                           783  STAIRSY     DS.W    1   ; STAIRS X COORDINATE
0000220C                           784  
0000220C= 00                       785  KEYOBTEINED DC.B    0   ; "BOOLEAN" VALUE, SELF EXPLANATORY 
0000220E                           786              DS.W    0
0000220E                           787  
0000220E                           788  NOKEYTIMER  DS.W    1
00002210                           789  
00002210                           790  RNGXINDEX   DS.W    1
00002212                           791  RNGYINDEX   DS.W    1
00002212                           792  -------------------- end include --------------------
00002214                           793              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CUBCOLP             CCE0EA
CUBCOS              2D
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1580
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1577
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1576
KEYINIT             13C4
KEYOBTEINED         220C
KEYPLOT             1410
KEYPLOT:NOKEY       1456
KEYUPDT             13DE
KEYUPDT:END         140A
KEYX                2204
KEYY                2206
MAPINIT             1360
MAPPLOT             1364
MAPUPDT             1362
NOKEYSTRING         11D6
NOKEYTIMER          220E
PLAYERINIT          1276
PLAYERPLOT          131A
PLAYERUPDT          1288
PLAYERUPDT:MOVED    1302
PLAYERUPDT:MOVEL    12BA
PLAYERUPDT:MOVER    12D2
PLAYERUPDT:MOVEU    12EA
PLAYERUPDT:RMVED    1310
PLAYERUPDT:RMVEL    12C8
PLAYERUPDT:RMVER    12E0
PLAYERUPDT:RMVEU    12F8
PLAYERX             2200
PLAYERY             2202
RNDINIT             122C
RNGX                123A
RNGXINDEX           2210
RNGY                1258
RNGYINDEX           2212
SCRCYCCT            1579
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1578
SCRIRQ              1
SCRISR              108C
SCRTIM              50
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            280
STAIRSINIT          1458
STAIRSPLOT          14D0
STAIRSPLOT:KEYOBTEINED  1522
STAIRSUPDT          146A
STAIRSUPDT:END      14C8
STAIRSUPDT:NOKEY    14AE
STAIRSX             2208
STAIRSY             220A
START               152E
START:LOOP          1542
START:WINT          1550
SYSINIT             1000
TILEDARK            745B6D
TILEDETA            A38099
TILEDIM             20
TILELIGH            CCE0EA
XVALUES             11F0
YVALUES             120E
