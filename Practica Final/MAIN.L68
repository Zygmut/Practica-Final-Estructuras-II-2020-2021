0000170A Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/26/2020 6:01:56 PM

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000280                 85  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 86  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000050                 88  SCRTIM      EQU     80                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 93  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 95  -------------------- end include --------------------
00001000                            96              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            97  ; =============================================================================
00001000                            98  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            99  ; AUTHOR   : ANTONI BURGUERA
00001000                           100  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           101  ;            - SYS : GENERIC.
00001000                           102  ;            - SCR : SCREEN MANAGEMENT.
00001000                           103  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           104  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           105  ;            11-OCT-2020 - MINOR CHANGES
00001000                           106  ; =============================================================================
00001000                           107  
00001000                           108  ; -----------------------------------------------------------------------------
00001000                           109  SYSINIT
00001000                           110  ; INITIALIZES THE SYSTEM
00001000                           111  ; INPUT    - NONE
00001000                           112  ; OUTPUT   - NONE
00001000                           113  ; MODIFIES - NONE
00001000                           114  ; -----------------------------------------------------------------------------
00001000  205F                     115              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            116              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            117              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            118              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                119              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     120              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     121              RTS
0000101C                           122  
0000101C                           123  ; =============================================================================
0000101C                           124  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           125  ; =============================================================================
0000101C                           126  
0000101C                           127  ; -----------------------------------------------------------------------------
0000101C                           128  SCRINIT
0000101C                           129  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           130  ; INPUT    - NONE
0000101C                           131  ; OUTPUT   - NONE
0000101C                           132  ; MODIFIES - D0,D1,D2,D3
0000101C                           133  ; -----------------------------------------------------------------------------
0000101C  007C 0700                134              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       135              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 028001E0            136              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                137              MOVE.B  #33,D0
00001032  4E4F                     138              TRAP    #15
00001034  7201                     139              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     140              TRAP    #15
00001038  323C FF00                141              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                142              MOVE.B  #11,D0
00001040  4E4F                     143              TRAP    #15
00001042  123C 0011                144              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                145              MOVE.B  #92,D0
0000104A  4E4F                     146              TRAP    #15
0000104C  323C FF00                147              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                148              MOVE.B  #11,D0
00001054  4E4F                     149              TRAP    #15
00001056  21FC 0000108C 0064       150              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                151              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                152              MOVE.B  #32,D0
00001066  4E4F                     153              TRAP    #15
00001068  143C 0081                154              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0050                155              MOVE.B  #SCRTIM,D3
00001070  123C 0006                156              MOVE.B  #6,D1
00001074  103C 0020                157              MOVE.B  #32,D0
00001078  4E4F                     158              TRAP    #15
0000107A  4239 00001760            159              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001761            160              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                161              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     162              RTS
0000108C                           163  
0000108C                           164  ; -----------------------------------------------------------------------------
0000108C                           165  SCRISR
0000108C                           166  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           167  ; INPUT    - NONE
0000108C                           168  ; OUTPUT   - NONE
0000108C                           169  ; MODIFIES - NONE
0000108C                           170  ; -----------------------------------------------------------------------------
0000108C  5239 00001760            171              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001761            172              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     173              RTE
0000109A                           174  
0000109A                           175  ; -----------------------------------------------------------------------------
0000109A                           176  SCRUPD
0000109A                           177  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           178  ; BUFFER FOR THE NEXT ONE.
0000109A                           179  ; INPUT    - NONE
0000109A                           180  ; OUTPUT   - NONE
0000109A                           181  ; MODIFIES - NONE
0000109A                           182  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                183              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                184              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     185              TRAP    #15
000010A4  323C FF00                186              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                187              MOVE.B  #11,D0
000010AC  4E4F                     188              TRAP    #15
000010AE  4C9F 0003                189              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     190              RTE
000010B4                           191  
000010B4                           192  ; =============================================================================
000010B4                           193  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           194  ; =============================================================================
000010B4                           195  
000010B4                           196  ; -----------------------------------------------------------------------------
000010B4                           197  KBDINIT
000010B4                           198  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           199  ; INPUT    - NONE
000010B4                           200  ; OUTPUT   - NONE
000010B4                           201  ; MODIFIES - NONE
000010B4                           202  ; -----------------------------------------------------------------------------
000010B4  4239 0000175E            203              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 0000175F            204              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       205              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     206              RTS
000010CA                           207  
000010CA                           208  ; -----------------------------------------------------------------------------
000010CA                           209  KBDREAD
000010CA                           210  ; TRAP SERVICE ROUTINE.
000010CA                           211  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           212  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           213  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           214  ; INPUT    - NONE
000010CA                           215  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           216  ; MODIFIES - NONE
000010CA                           217  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                218              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                219              MOVE.B  #19,D0
000010D2  223C 50104D20            220              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     221              TRAP    #15
000010DA  6100 002A                222              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            223              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     224              TRAP    #15
000010E6  6100 001E                225              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 0000175E            226              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     227              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     228              AND.B   D2,D0
000010F4  13C2 0000175E            229              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 0000175F            230              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                231              MOVEM.L (A7)+,D0-D3
00001104  4E73                     232              RTE
00001106                           233  
00001106  363C 0003                234  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     235  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     236              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                237              DBRA.W  D3,.LOOP
00001112  4E75                     238              RTS
00001114                           239  
00001114                           240  ; =============================================================================
00001114                           241  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           242  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           243  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           244  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           245  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           246  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           247  ; =============================================================================
00001114                           248  
00001114                           249  ; -----------------------------------------------------------------------------
00001114                           250  DMMINIT
00001114                           251  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           252  ; INPUT    - NONE
00001114                           253  ; OUTPUT   - NONE
00001114                           254  ; MODIFIES - NONE
00001114                           255  ; -----------------------------------------------------------------------------
00001114  48E7 8080                256              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001780            257              LEA     DMMDATA,A0
0000111E  303C 0031                258              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                259  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            260              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                261              DBRA.W  D0,.LOOP
00001130  4CDF 0101                262              MOVEM.L (A7)+,D0/A0
00001134  4E75                     263              RTS
00001136                           264  
00001136                           265  ; -----------------------------------------------------------------------------
00001136                           266  DMMFIRST
00001136                           267  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           268  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           269  ; INPUT    - NONE
00001136                           270  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           271  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           272  ; -----------------------------------------------------------------------------
00001136  41F9 00001780            273              LEA     DMMDATA,A0
0000113C  4A58                     274  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                275              BNE     DMMFRFND
00001142  D1FC 0000003E            276              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 000023FF            277  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     278              BLT     DMMFRLOP
00001150  207C 00000000            279              MOVE.L  #0,A0
00001156  4E75                     280  DMMFRFND    RTS
00001158                           281  
00001158                           282  ; -----------------------------------------------------------------------------
00001158                           283  DMMNEXT
00001158                           284  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           285  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           286  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           287  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           288  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           289  ; -----------------------------------------------------------------------------
00001158  2F00                     290              MOVE.L  D0,-(A7)
0000115A  2008                     291              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            292              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            293              ADD.L   #DMMBSIZE,D0
00001168  2040                     294              MOVE.L  D0,A0
0000116A  201F                     295              MOVE.L  (A7)+,D0
0000116C  60DA                     296              BRA     DMMFRCOM
0000116E                           297  
0000116E                           298  ; -----------------------------------------------------------------------------
0000116E                           299  DMMFRSTO
0000116E                           300  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           301  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           302  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           303  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           304  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           305  ; -----------------------------------------------------------------------------
0000116E  41F9 00001780            306              LEA     DMMDATA,A0
00001174  B058                     307  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                308              BEQ     DMMFFND
0000117A  D1FC 0000003E            309              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 000023FF            310  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     311              BLT     DMMFLOOP
00001188  207C 00000000            312              MOVE.L  #0,A0
0000118E  4E75                     313  DMMFFND     RTS
00001190                           314  
00001190                           315  ; -----------------------------------------------------------------------------
00001190                           316  DMMNEXTO
00001190                           317  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           318  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           319  ; INPUT    - D0.W : ID TO SEARCH
00001190                           320  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           321  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           323  ; -----------------------------------------------------------------------------
00001190  2F00                     324              MOVE.L  D0,-(A7)
00001192  2008                     325              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            326              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            327              ADD.L   #DMMBSIZE,D0
000011A0  2040                     328              MOVE.L  D0,A0
000011A2  201F                     329              MOVE.L  (A7)+,D0
000011A4  60DA                     330              BRA     DMMFCOM
000011A6                           331  
000011A6                           332  ; -----------------------------------------------------------------------------
000011A6                           333  DMMALLOC
000011A6                           334  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           335  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           336  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           337  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           339  ; -----------------------------------------------------------------------------
000011A6  3F00                     340              MOVE.W  D0,-(A7)
000011A8  4240                     341              CLR.W   D0
000011AA  4EB8 116E                342              JSR     DMMFRSTO
000011AE  301F                     343              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            344              CMP.L   #0,A0
000011B6  6700 0006                345              BEQ     .END
000011BA  3140 FFFE                346              MOVE.W  D0,-2(A0)
000011BE  4E75                     347  .END        RTS
000011C0                           348  
000011C0                           349  ; -----------------------------------------------------------------------------
000011C0                           350  DMMFREE
000011C0                           351  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           352  ; SYSTEM (0)
000011C0                           353  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           354  ; OUTPUT   - NONE
000011C0                           355  ; MODIFIES - NONE
000011C0                           356  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                357              MOVEM.L D0/A0,-(A7)
000011C4  2008                     358              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            359              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     360              MOVE.L  D0,A0
000011CE  4250                     361              CLR.W   (A0)
000011D0  4CDF 0101                362              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     363              RTS
000011D4  4E75                     364  -------------------- end include --------------------
000011D6                           365              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           366  ; =============================================================================
000011D6                           367  ; TITLE    : GAME CONSTANTS
000011D6                           368  ; AUTHOR   :
000011D6                           369  ; HISTORY  :
000011D6                           370  ; =============================================================================
000011D6  =0000002D                371  CUBCOS    EQU     45                ;LONG OF ONE SIDE OF THE CUBE
000011D6  =00CCE0EA                372  CUBCOLP   EQU     $00CCE0EA         ; COLOR OF THE CUBE
000011D6                           373  
000011D6                           374  ;   TILE
000011D6                           375  
000011D6  =00000020                376  TILEDIM     EQU     32         ; TILE SET DIMENSIONS && PLAYER SPEED
000011D6                           377  
000011D6  =00745B6D                378  TILEDARK    EQU     $00745B6D  ; TILE SET DARK COLOR 
000011D6  =00CCE0EA                379  TILELIGH    EQU     $00CCE0EA  ; TILE SET LIGHT COLOR
000011D6  =00A38099                380  TILEDETA    EQU     $00A38099  ; TILE SET DETAIL COLOR
000011D6                           381  
000011D6= 594F 5520 444F 2...      382  NOKEYSTRING DC.W   'YOU DO NOT HAVE ANY KEYS', 0
000011F0                           383  
000011F0= 594F 5520 4152 4...      384  DEATHSTRING DC.W   'YOU ARE DEAD KEK YOU BAD', 0
0000120A                           385  
0000120A  =00000032                386  ENEMYMAXCNT EQU     50
0000120A                           387  
0000120A= 0080 01E0 0200 0...      388  XVALUES     DC.W    $80, $1E0, $200, $1A0, $C0, $A0, $180, $E0, $60, $100
0000121E= 0220 0120 01C0 0...      389              DC.W    $220, $120, $1C0, $140, $160, $80, $A0, $1E0, $180, $140 
00001232= 0100 00E0 01A0 0...      390              DC.W    $100, $E0, $1A0, $160, $220, $200, $C0, $60, $1C0, $120    
00001246= 0140 0160 0060 0...      391              DC.W    $140, $160, $60, $100, $E0, $120, $1E0, $1A0, $A0, $1C0
0000125A= 0220 00C0 0080 0...      392              DC.W    $220, $C0, $80, $200, $180, $100, $80, $220, $1C0, $1E0
0000126E= 00E0 0120 0060 0...      393              DC.W    $E0, $120, $60, $160, $200, $C0, $140, $A0, $180, $1A0   
00001282                           394  
00001282= 00B0 0150 0030 0...      395  YVALUES     DC.W    $B0, $150, $30, $10, $F0, $70, $90, $50, $D0, $190
00001296= 01D0 0130 0170 0...      396              DC.W    $1D0, $130, $170, $1B0, $110, $170, $F0, $110, $10
000012A8= 0050 0070 0150 0...      397              DC.W    $50, $70, $150, $1D0, $130, $D0, $30, $90, $190, $B0
000012BC= 00D0 0130 0090 0...      398              DC.W    $D0, $130, $90, $70, $150, $10, $1B0, $50, $30, $B0
000012D0= 0110 0170 00F0 0...      399              DC.W    $110, $170, $F0, $190, $1D0, $1B0, $130, $190, $10, $1B0
000012E4= 00B0 00D0 0110 0...      400              DC.W    $B0, $D0, $110, $50, $F0, $1D0, $170, $150, $90, $30
000012E4= 00B0 00D0 0110 0...      401  -------------------- end include --------------------
000012F8                           402              INCLUDE "RANDOM.X68"            ; PSEUDO - RANDOM GENERATOR
000012F8                           403  ; =============================================================================
000012F8                           404  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
000012F8                           405  ; AUTHOR   : ANTONI BURGUERA
000012F8                           406  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
000012F8                           407  ; HISTORY  : XX-XXX-201X - CREATION
000012F8                           408  ;            11-OCT-2020 - MINOR CHANGES
000012F8                           409  ; =============================================================================
000012F8                           410  
000012F8                           411  ; -----------------------------------------------------------------------------
000012F8                           412  RNDINIT
000012F8                           413  ; INITIALIZES RANDOM NUMBER GENERATOR
000012F8                           414  ; INPUT    - NONE
000012F8                           415  ; OUTPUT   - NONE
000012F8                           416  ; MODIFIES - NONE
000012F8                           417  ; -----------------------------------------------------------------------------
000012F8  4279 00002414            418              CLR     (RNGXINDEX)
000012FE  4279 00002416            419              CLR     (RNGYINDEX)
00001304                           420  
00001304  4E75                     421              RTS
00001306                           422  ; -----------------------------------------------------------------------------
00001306                           423  RNGX
00001306                           424  ; PROVIDES A PSEUDO-RANDOM BYTE
00001306                           425  ; INPUT    - NONE
00001306                           426  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
00001306                           427  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001306                           428  ; -----------------------------------------------------------------------------
00001306  2F08                     429              MOVE.L  A0,-(A7)
00001308                           430  
00001308  41F8 120A                431              LEA     XVALUES, A0
0000130C  4280                     432              CLR.L   D0
0000130E                           433              
0000130E  1039 00002414            434              MOVE.B  (RNGXINDEX), D0
00001314  E348                     435              LSL.W   #1, D0     
00001316  D0C0                     436              ADD.W   D0, A0
00001318  3010                     437              MOVE.W  (A0), D0
0000131A  5239 00002414            438              ADDQ.B  #1, (RNGXINDEX)
00001320  0C79 3A00 00002414       439              CMP     #$3A00, (RNGXINDEX)
00001328  6600 0008                440              BNE     .NOVERFLOW     
0000132C  4279 00002414            441              CLR     (RNGXINDEX)
00001332                           442  .NOVERFLOW            
00001332  205F                     443              MOVE.L  (A7)+, A0
00001334  4E75                     444              RTS
00001336                           445  
00001336                           446  RNGY
00001336                           447  ; PROVIDES A PSEUDO-RANDOM BYTE
00001336                           448  ; INPUT    - NONE
00001336                           449  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
00001336                           450  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001336                           451  ; -----------------------------------------------------------------------------
00001336  2F08                     452              MOVE.L  A0,-(A7)
00001338                           453  
00001338  41F8 1282                454              LEA     YVALUES, A0
0000133C  4280                     455              CLR.L   D0
0000133E                           456              
0000133E  1039 00002416            457              MOVE.B  (RNGYINDEX), D0
00001344  E348                     458              LSL.W   #1, D0  
00001346  D0C0                     459              ADD.W   D0, A0
00001348  3010                     460              MOVE.W  (A0), D0
0000134A  5239 00002416            461              ADDQ.B  #1, (RNGYINDEX)
00001350  0C79 3A00 00002416       462              CMP     #$3A00, (RNGYINDEX)
00001358  6600 0008                463              BNE     .NOVERFLOW
0000135C  4279 00002416            464              CLR     (RNGYINDEX)
00001362                           465  .NOVERFLOW
00001362  205F                     466              MOVE.L  (A7)+, A0
00001364  4E75                     467              RTS
00001366                           468  
00001366                           469  ; UPDATE RANDOM VALUES TO HAVE ONLY CENTER VALUES OF THE "GRID"
00001366                           470  -------------------- end include --------------------
00001366                           471              INCLUDE "PLAYER.X68"            ; PLAYER MANAGER
00001366                           472  ; =============================================================================
00001366                           473  ; TITLE    : PLAYER MANAGER
00001366                           474  ; AUTHOR   : 
00001366                           475  ; COMMENTS : 
00001366                           476  ; =============================================================================
00001366                           477  
00001366                           478  
00001366                           479  PLAYERINIT
00001366  33FC 0140 00002400       480              MOVE.W #SCRWIDTH/2, (PLAYERX)       ; SET PLAYER TO CENTER
0000136E  33FC 00F0 00002402       481              MOVE.W #SCRHEIGH/2, (PLAYERY)       ; SET PLAYER TO CENTER
00001376  4E75                     482              RTS
00001378                           483  
00001378                           484  PLAYERUPDT
00001378  0839 0000 0000175E       485              BTST.B  #KBDBITLF, (KBDVAL)         ; LEFT KEY PRESSED
00001380  6600 0028                486              BNE     .MOVEL
00001384  0839 0002 0000175E       487              BTST.B  #KBDBITRT, (KBDVAL)         ; RIGHT KEY PRESSED
0000138C  6600 0034                488              BNE     .MOVER
00001390  0839 0001 0000175E       489              BTST.B  #KBDBITUP, (KBDVAL)         ; UP KEY PRESSED
00001398  6600 0040                490              BNE     .MOVEU
0000139C  0839 0003 0000175E       491              BTST.B  #KBDBITDN, (KBDVAL)         ; DOWN KEY PRESSED
000013A4  6600 004C                492              BNE     .MOVED
000013A8  4E75                     493              RTS
000013AA                           494  .MOVEL
000013AA  0C79 0070 00002400       495              CMP.W   #TILEDIM/2+(SCRWIDTH-SCRHEIGH)-64, (PLAYERX)       ; LEFT BOUNDARY
000013B2  6E00 0004                496              BGT     .RMVEL
000013B6  4E75                     497              RTS
000013B8                           498  .RMVEL
000013B8  0479 0020 00002400       499              SUB.W   #TILEDIM, (PLAYERX)         ; MOVE LEFT
000013C0  4E75                     500              RTS
000013C2                           501  
000013C2                           502  .MOVER
000013C2  0C79 020F 00002400       503              CMP.W   #SCRHEIGH-1-TILEDIM/2+64, (PLAYERX)    ; RIGHT BOUNDARY
000013CA  6D00 0004                504              BLT     .RMVER
000013CE  4E75                     505              RTS
000013D0                           506  .RMVER
000013D0  0679 0020 00002400       507              ADD.W   #TILEDIM, (PLAYERX)         ; MOVE RIGHT
000013D8  4E75                     508              RTS
000013DA                           509  
000013DA                           510  .MOVEU
000013DA  0C79 0010 00002402       511              CMP.W   #TILEDIM/2, (PLAYERY)       ; TOP BOUNDARY
000013E2  6E00 0004                512              BGT     .RMVEU
000013E6  4E75                     513              RTS
000013E8                           514  .RMVEU
000013E8  0479 0020 00002402       515              SUB.W   #TILEDIM, (PLAYERY)         ; MOVE UP
000013F0  4E75                     516              RTS
000013F2                           517  
000013F2                           518  .MOVED
000013F2  0C79 01CF 00002402       519              CMP.W   #SCRHEIGH-1-TILEDIM/2, (PLAYERY)    ; BOTTOM BOUNDARY
000013FA  6D00 0004                520              BLT     .RMVED
000013FE  4E75                     521              RTS
00001400                           522  .RMVED
00001400  0679 0020 00002402       523              ADD.W   #TILEDIM, (PLAYERY)         ; MOVE DOWN
00001408  4E75                     524              RTS
0000140A                           525  
0000140A                           526  PLAYERPLOT
0000140A  48E7 F800                527              MOVEM.L D0-D4, -(A7)
0000140E  103C 0050                528              MOVE.B  #80, D0                     ; SET PEN CALL
00001412  223C 00CCE0EA            529              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
00001418  4E4F                     530              TRAP    #15                         
0000141A                           531              
0000141A  5240                     532              ADDQ.W  #1, D0                      ; SET FILL CALL
0000141C  223C 00CCE0EA            533              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
00001422  4E4F                     534              TRAP    #15
00001424                           535              
00001424  3239 00002400            536              MOVE.W  (PLAYERX), D1               ; D1 = X CENTER
0000142A  3439 00002402            537              MOVE.W  (PLAYERY), D2               ; D1 = Y CENTER
00001430  3601                     538              MOVE.W  D1, D3
00001432  3802                     539              MOVE.W  D2, D4
00001434  0441 0010                540              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001438  0442 0010                541              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
0000143C  0644 0010                542              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001440  0643 0010                543              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
00001444                           544  
00001444  303C 0057                545              MOVE.W  #87, D0
00001448  4E4F                     546              TRAP    #15
0000144A  4CDF 001F                547              MOVEM.L (A7)+,D0-D4
0000144E  4E75                     548              RTS
0000144E  4E75                     549  -------------------- end include --------------------
00001450                           550              INCLUDE "MAP.X68"               ; MAP MANAGER
00001450                           551  MAPINIT
00001450  4E75                     552          RTS      
00001452                           553  MAPUPDT
00001452  4E75                     554          RTS
00001454                           555  MAPPLOT
00001454  48E7 F800                556          MOVEM.L D0-D4, -(A7)
00001458                           557  
00001458  103C 0050                558          MOVE.B  #80, D0                     ; SET PEN CALL
0000145C  223C 00745B6D            559          MOVE.L  #TILEDARK, D1               ; SET PEN COLOR
00001462  4E4F                     560          TRAP    #15                         
00001464                           561              
00001464  5240                     562          ADDQ.W  #1, D0                      ; SET FILL CALL
00001466  223C 00745B6D            563          MOVE.L  #TILEDARK, D1               ; SET FILL COLOR
0000146C  4E4F                     564          TRAP    #15
0000146E                           565  
0000146E  4241                     566          CLR     D1                          ; LEFT BORDER
00001470  4242                     567          CLR     D2                      
00001472  363C 004F                568          MOVE.W  #79, D3
00001476  383C 01E0                569          MOVE.W  #SCRHEIGH, D4
0000147A  303C 0057                570          MOVE.W  #87, D0
0000147E  4E4F                     571          TRAP    #15
00001480                           572  
00001480  323C 0231                573          MOVE.W  #561, D1                    ; RIGHT BORDER                                
00001484  363C 0280                574          MOVE.W  #SCRWIDTH, D3
00001488  4E4F                     575          TRAP    #15
0000148A                           576  
0000148A  4240                     577          CLR     D0
0000148C  4241                     578          CLR     D1
0000148E                           579  
0000148E  103C 0050                580          MOVE.B  #80, D0                     ; SET PEN CALL
00001492  223C 00A38099            581          MOVE.L  #TILEDETA, D1               ; SET PEN COLOR
00001498  4E4F                     582          TRAP    #15                         
0000149A                           583              
0000149A  5240                     584          ADDQ.W  #1, D0                      ; SET FILL CALL
0000149C  223C 00A38099            585          MOVE.L  #TILEDETA, D1               ; SET FILL COLOR
000014A2  4E4F                     586          TRAP    #15
000014A4                           587  
000014A4  323C 0091                588          MOVE.W  #145, D1                    ; FLOOR                      
000014A8  363C 01EF                589          MOVE.W  #495, D3
000014AC  4E4F                     590          TRAP    #15
000014AE  4CDF 001F                591          MOVEM.L (A7)+,D0-D4
000014B2                           592  
000014B2  4E75                     593          RTS
000014B2  4E75                     594  -------------------- end include --------------------
000014B4                           595              INCLUDE "KEY.X68"               ; KEY MANAGER
000014B4                           596  KEYINIT             ; RANDOM POSITION
000014B4  2F00                     597              MOVE.L D0, -(A7)
000014B6  4EB8 1306                598              JSR     RNGX
000014BA  33C0 00002404            599              MOVE.W  D0, (KEYX)
000014C0  4EB8 1336                600              JSR     RNGY
000014C4  33C0 00002406            601              MOVE.W  D0, (KEYY)
000014CA  201F                     602              MOVE.L  (A7)+, D0
000014CC  4E75                     603              RTS
000014CE                           604  KEYUPDT             ; NOTHING
000014CE  48E7 8000                605              MOVEM.L D0, -(A7)
000014D2  3039 00002404            606              MOVE.W  (KEYX), D0
000014D8  B079 00002400            607              CMP.W   (PLAYERX), D0
000014DE  6600 001A                608              BNE     .END
000014E2  3039 00002406            609              MOVE.W  (KEYY), D0
000014E8  B079 00002402            610              CMP.W   (PLAYERY), D0
000014EE  6600 000A                611              BNE     .END
000014F2  13FC 0001 00002410       612              MOVE.B  #1, (KEYOBTEINED)           ; THE PLAYER IS IN THE POSITION OF THE KEY
000014FA                           613  .END
000014FA  4CDF 0001                614              MOVEM.L (A7)+, D0
000014FE  4E75                     615              RTS
00001500                           616  
00001500                           617  KEYPLOT             ; LIGHT BORDERED CIRCLE
00001500  0C39 0001 00002410       618              CMP.B   #1, (KEYOBTEINED)
00001508  6700 003C                619              BEQ     .NOKEY
0000150C  48E7 F800                620              MOVEM.L D0-D4, -(A7)
00001510  103C 0050                621              MOVE.B  #80, D0                     ; SET PEN CALL
00001514  223C 00CCE0EA            622              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
0000151A  4E4F                     623              TRAP    #15                         
0000151C                           624              
0000151C  3239 00002404            625              MOVE.W  (KEYX), D1               ; D1 = X CENTER
00001522  3439 00002406            626              MOVE.W  (KEYY), D2               ; D1 = Y CENTER
00001528  3601                     627              MOVE.W  D1, D3
0000152A  3802                     628              MOVE.W  D2, D4
0000152C  0441 0010                629              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001530  0442 0010                630              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001534  0644 0010                631              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001538  0643 0010                632              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
0000153C                           633  
0000153C  303C 005B                634              MOVE.W  #91, D0
00001540  4E4F                     635              TRAP    #15
00001542  4CDF 001F                636              MOVEM.L (A7)+,D0-D4
00001546                           637  .NOKEY            
00001546  4E75                     638              RTS
00001546  4E75                     639  -------------------- end include --------------------
00001548                           640              INCLUDE "STAIRS.X68"            ; STAIR MANAGER 
00001548                           641  STAIRSINIT          ; RANDOM POSTION
00001548  2F00                     642              MOVE.L D0, -(A7)
0000154A  4EB8 1306                643              JSR     RNGX
0000154E  33C0 00002408            644              MOVE.W  D0, (STAIRSX)
00001554  4EB8 1336                645              JSR     RNGY
00001558  33C0 0000240A            646              MOVE.W  D0, (STAIRSY)
0000155E  201F                     647              MOVE.L  (A7)+, D0
00001560  4E75                     648              RTS
00001562                           649  STAIRSUPDT          ; NOTHING
00001562  48E7 C000                650              MOVEM.L D0-D1, -(A7)
00001566  3039 00002408            651              MOVE.W  (STAIRSX), D0
0000156C  B079 00002400            652              CMP.W   (PLAYERX), D0
00001572  6600 0058                653              BNE     .END
00001576  3039 0000240A            654              MOVE.W  (STAIRSY), D0
0000157C  B079 00002402            655              CMP.W   (PLAYERY), D0
00001582  6600 0048                656              BNE     .END
00001586                           657              ; THE PLAYER IS IN THE POSITION OF THE STAIRS
00001586  0C39 0001 00002410       658              CMP.B   #1, (KEYOBTEINED)
0000158E  6600 0022                659              BNE     .NOKEY
00001592  4EB8 14B4                660              JSR     KEYINIT
00001596  4EB8 1548                661              JSR     STAIRSINIT
0000159A  4EB9 00001630            662              JSR     ENEMYINIT
000015A0  13FC 0000 00002410       663              MOVE.B  #0, (KEYOBTEINED)
000015A8  5279 00002418            664              ADDQ.W  #1, (LEVEL)
000015AE  6000 001C                665              BRA     .END
000015B2                           666  .NOKEY      ; SAME POSITION NO KEY
000015B2                           667  
000015B2  303C 0051                668              MOVE.W  #81, D0                      ; SET FILL CALL
000015B6  7200                     669              MOVE.L  #0, D1               ; SET FILL COLOR
000015B8  4E4F                     670              TRAP    #15
000015BA                           671  
000015BA  43F8 11D6                672              LEA     NOKEYSTRING, A1
000015BE  323C 00DC                673              MOVE.W  #SCRWIDTH/2-100, D1
000015C2  343C 003C                674              MOVE.W  #SCRHEIGH/8, D2
000015C6                           675  
000015C6  303C 005F                676              MOVE.W #95, D0
000015CA  4E4F                     677              TRAP    #15
000015CC                           678  
000015CC                           679  .END
000015CC  4CDF 0003                680              MOVEM.L (A7)+, D0-D1
000015D0  4E75                     681              RTS
000015D2                           682              
000015D2                           683  STAIRSPLOT          ; LIGHT FILLED CIRCLE
000015D2                           684             
000015D2  48E7 F800                685              MOVEM.L D0-D4, -(A7)
000015D6  103C 0050                686              MOVE.B  #80, D0                     ; SET PEN CALL
000015DA  223C 00CCE0EA            687              MOVE.L  #TILELIGH, D1               ; SET PEN COLOR
000015E0  4E4F                     688              TRAP    #15        
000015E2                           689  
000015E2  5240                     690              ADDQ.W  #1, D0                      ; SET FILL CALL
000015E4  223C 00CCE0EA            691              MOVE.L  #TILELIGH, D1               ; SET FILL COLOR
000015EA  4E4F                     692              TRAP    #15                 
000015EC                           693              
000015EC  3239 00002408            694              MOVE.W  (STAIRSX), D1               ; D1 = X CENTER
000015F2  3439 0000240A            695              MOVE.W  (STAIRSY), D2               ; D1 = Y CENTER
000015F8  3601                     696              MOVE.W  D1, D3
000015FA  3802                     697              MOVE.W  D2, D4
000015FC  0441 0010                698              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
00001600  0442 0010                699              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
00001604  0644 0010                700              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
00001608  0643 0010                701              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
0000160C                           702              
0000160C  0C39 0001 00002410       703              CMP.B  #1, (KEYOBTEINED)
00001614  6700 000E                704              BEQ     .KEYOBTEINED
00001618  303C 0058                705              MOVE.W  #88, D0
0000161C  4E4F                     706              TRAP    #15
0000161E                           707  
0000161E  4CDF 001F                708              MOVEM.L (A7)+,D0-D4
00001622                           709  
00001622  4E75                     710              RTS
00001624                           711  .KEYOBTEINED
00001624  303C 005B                712              MOVE.W  #91, D0
00001628  4E4F                     713              TRAP    #15
0000162A                           714  
0000162A  4CDF 001F                715              MOVEM.L (A7)+,D0-D4
0000162E  4E75                     716              RTS
00001630                           717  
00001630                           718  
00001630                           719  -------------------- end include --------------------
00001630                           720              INCLUDE "ENEMY.X68"             ; ENEMY MANAGER
00001630                           721  ENEMYINIT
00001630  2F00                     722              MOVE.L  D0, -(A7)
00001632  4EB8 1306                723              JSR     RNGX
00001636  B079 00002400            724              CMP.W   (PLAYERX), D0   ;CHECK IF THE ENEMY IS ON THE PLAYER, STAIRS O KEY
0000163C  6700 FD28                725              BEQ     PLAYERINIT
00001640  B079 00002408            726              CMP.W   (STAIRSX), D0
00001646  6700 FD1E                727              BEQ     PLAYERINIT
0000164A  B079 00002404            728              CMP.W   (KEYX), D0
00001650  6700 FD14                729              BEQ     PLAYERINIT
00001654  33C0 0000240C            730              MOVE.W  D0, (ENEMYX)
0000165A                           731  
0000165A                           732  .INVALIDY
0000165A  4EB8 1336                733              JSR     RNGY
0000165E  B079 00002402            734              CMP.W   (PLAYERY), D0   ;CHECK IF THE ENEMY IS ON THE PLAYER, STAIRS O KEY
00001664  67F4                     735              BEQ     .INVALIDY
00001666  B079 0000240A            736              CMP.W   (STAIRSY), D0
0000166C  67EC                     737              BEQ     .INVALIDY
0000166E  B079 00002406            738              CMP.W   (KEYY), D0
00001674  67E4                     739              BEQ     .INVALIDY
00001676  33C0 0000240E            740              MOVE.W  D0, (ENEMYY)
0000167C                           741  
0000167C  201F                     742              MOVE.L  (A7)+, D0
0000167E  4E75                     743              RTS
00001680                           744  
00001680                           745  ENEMYUPDT
00001680  48E7 C000                746              MOVEM.L D0-D1, -(A7)
00001684  3039 0000240C            747              MOVE.W  (ENEMYX), D0
0000168A  B079 00002400            748              CMP.W   (PLAYERX), D0
00001690  6600 002C                749              BNE     .END
00001694  3039 0000240E            750              MOVE.W  (ENEMYY), D0
0000169A  B079 00002402            751              CMP.W   (PLAYERY), D0
000016A0  6600 001C                752              BNE     .END
000016A4                           753              ; THE PLAYER IS IN THE POSITION OF THE STAIRS
000016A4                           754  
000016A4  303C 0051                755              MOVE.W  #81, D0                      ; SET FILL CALL
000016A8  7200                     756              MOVE.L  #0, D1                       ; SET FILL COLOR
000016AA  4E4F                     757              TRAP    #15
000016AC                           758  
000016AC  43F8 11F0                759              LEA     DEATHSTRING, A1
000016B0  323C 00DC                760              MOVE.W  #SCRWIDTH/2-100, D1
000016B4  343C 003C                761              MOVE.W  #SCRHEIGH/8, D2
000016B8                           762  
000016B8  303C 005F                763              MOVE.W  #95, D0
000016BC  4E4F                     764              TRAP    #15
000016BE                           765  
000016BE                           766  .END
000016BE  4CDF 0003                767              MOVEM.L (A7)+, D0-D1
000016C2  4E75                     768              RTS
000016C4                           769  
000016C4                           770  ENEMYPLOT
000016C4  48E7 F800                771              MOVEM.L D0-D4, -(A7)
000016C8  103C 0050                772              MOVE.B  #80, D0                     ; SET PEN CALL
000016CC  223C 00A38099            773              MOVE.L  #TILEDETA, D1               ; SET PEN COLOR
000016D2  4E4F                     774              TRAP    #15                         
000016D4                           775              
000016D4  5240                     776              ADDQ.W  #1, D0                      ; SET FILL CALL
000016D6  223C 00A38099            777              MOVE.L  #TILEDETA, D1               ; SET FILL COLOR
000016DC  4E4F                     778              TRAP    #15
000016DE                           779              
000016DE  3239 0000240C            780              MOVE.W  (ENEMYX), D1               ; D1 = X CENTER
000016E4  3439 0000240E            781              MOVE.W  (ENEMYY), D2               ; D1 = Y CENTER
000016EA  3601                     782              MOVE.W  D1, D3
000016EC  3802                     783              MOVE.W  D2, D4
000016EE  0441 0010                784              SUB.W   #TILEDIM/2, D1              ; SET TOP LEFT CORNER
000016F2  0442 0010                785              SUB.W   #TILEDIM/2, D2              ; SET TOP LEFT CORNER 
000016F6  0644 0010                786              ADD.W   #TILEDIM/2, D4              ; SET LOW RIGHT CORNER
000016FA  0643 0010                787              ADD.W   #TILEDIM/2, D3              ; SET LOW RIGHT CORNER
000016FE                           788  
000016FE  303C 0057                789              MOVE.W  #87, D0
00001702  4E4F                     790              TRAP    #15
00001704  4CDF 001F                791              MOVEM.L (A7)+,D0-D4
00001708  4E75                     792              RTS
00001708  4E75                     793  -------------------- end include --------------------
0000170A                           794  
0000170A                           795  ; --- INITIALIZE --------------------------------------------------------------
0000170A                           796  
0000170A  4EB8 1000                797  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
0000170E                           798  
0000170E                           799              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
0000170E  4EB8 12F8                800              JSR     RNDINIT
00001712  4EB8 1366                801              JSR     PLAYERINIT
00001716  4EB8 14B4                802              JSR     KEYINIT
0000171A  4EB8 1548                803              JSR     STAIRSINIT
0000171E  4EB8 1630                804              JSR     ENEMYINIT
00001722                           805              
00001722                           806  ; --- UPDATE ------------------------------------------------------------------
00001722                           807  
00001722  4E40                     808  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
00001724                           809  
00001724                           810              ; TO DO : ADD YOUR GAME UPDATE HERE
00001724                           811  
00001724  4EB8 1378                812              JSR     PLAYERUPDT
00001728  4EB8 14CE                813              JSR     KEYUPDT
0000172C  4EB8 1562                814              JSR     STAIRSUPDT
00001730  4EB8 1680                815              JSR     ENEMYUPDT
00001734                           816  ; --- WAIT SYNCH --------------------------------------------------------------
00001734                           817  
00001734  4A39 00001760            818  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
0000173A  67F8                     819              BEQ     .WINT
0000173C  4239 00001760            820              CLR.B   (SCRINTCT)
00001742                           821  
00001742                           822  ; --- PLOT --------------------------------------------------------------------
00001742                           823  
00001742                           824              ; TO DO : ADD YOUR GAME PLOT HERE
00001742                           825              
00001742  4EB8 1454                826              JSR     MAPPLOT
00001746  4EB8 140A                827              JSR     PLAYERPLOT
0000174A  4EB8 1500                828              JSR     KEYPLOT
0000174E  4EB8 15D2                829              JSR     STAIRSPLOT
00001752  4EB8 16C4                830              JSR     ENEMYPLOT
00001756                           831  
00001756  4E41                     832              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001758  60C8                     833              BRA     .LOOP                   ; MAIN LOOP
0000175A  FFFF FFFF                834              SIMHALT
0000175E                           835  
0000175E                           836  ; --- VARIABLES ---------------------------------------------------------------
0000175E                           837  
0000175E                           838              INCLUDE "SYSVAR.X68"
0000175E                           839  ; =============================================================================
0000175E                           840  ; TITLE    : SYSTEM VARIABLES
0000175E                           841  ; AUTHOR   : ANTONI BURGUERA
0000175E                           842  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
0000175E                           843  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
0000175E                           844  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
0000175E                           845  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
0000175E                           846  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
0000175E                           847  ; HISTORY  : XX-XXX-201X - CREATION
0000175E                           848  ;            11-OCT-2020 - MINOR CHANGES
0000175E                           849  ; =============================================================================
0000175E                           850  
0000175E                           851  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
0000175E                           852  
0000175E                           853  KBDVAL      DS.B    1                       ; KEY PRESSED=1
0000175F                           854  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001760                           855  
00001760                           856              DS.W    0
00001760                           857  
00001760                           858  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001760                           859  
00001760                           860  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001761                           861  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001762                           862              DS.W    0
00001762                           863  
00001762                           864  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001762                           865  
00001780                           866              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001780                           867  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002400                           868              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002400                           869  -------------------- end include --------------------
00002400                           870              INCLUDE "VAR.X68"
00002400                           871  ; =============================================================================
00002400                           872  ; TITLE    : GAME VARIABLES
00002400                           873  ; AUTHOR   :
00002400                           874  ; HISTORY  :
00002400                           875  ; =============================================================================
00002400                           876  
00002400                           877  ; PLAYER
00002400                           878  PLAYERX     DS.W    1   ; PLAYER X COORDINATE
00002402                           879  PLAYERY     DS.W    1   ; PLAYER Y COORDINATE
00002404                           880  
00002404                           881  KEYX        DS.W    1   ; KEY X COORDINATE
00002406                           882  KEYY        DS.W    1   ; KEY Y COORDINATE
00002408                           883  
00002408                           884  STAIRSX     DS.W    1   ; STAIRS X COORDINATE
0000240A                           885  STAIRSY     DS.W    1   ; STAIRS Y COORDINATE
0000240C                           886  
0000240C                           887  ENEMYX      DS.W    1   ; ENEMY X COORDINATE
0000240E                           888  ENEMYY      DS.W    1   ; ENEMY Y COORDINATE 
00002410                           889  
00002410= 0000                     890  KEYOBTEINED DC.W    0   ; "BOOLEAN" VALUE, SELF EXPLANATORY 
00002412                           891  
00002412                           892  NOKEYTIMER  DS.W    1
00002414                           893  
00002414                           894  RNGXINDEX   DS.W    1 
00002416                           895  RNGYINDEX   DS.W    1 
00002418                           896  
00002418= 0000                     897  LEVEL       DC.W    0
0000241A                           898  
0000241A                           899  -------------------- end include --------------------
0000241A                           900              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CUBCOLP             CCE0EA
CUBCOS              2D
DEATHSTRING         11F0
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1780
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
ENEMYINIT           1630
ENEMYINIT:INVALIDY  165A
ENEMYMAXCNT         32
ENEMYPLOT           16C4
ENEMYUPDT           1680
ENEMYUPDT:END       16BE
ENEMYX              240C
ENEMYY              240E
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             175F
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              175E
KEYINIT             14B4
KEYOBTEINED         2410
KEYPLOT             1500
KEYPLOT:NOKEY       1546
KEYUPDT             14CE
KEYUPDT:END         14FA
KEYX                2404
KEYY                2406
LEVEL               2418
MAPINIT             1450
MAPPLOT             1454
MAPUPDT             1452
NOKEYSTRING         11D6
NOKEYTIMER          2412
PLAYERINIT          1366
PLAYERPLOT          140A
PLAYERUPDT          1378
PLAYERUPDT:MOVED    13F2
PLAYERUPDT:MOVEL    13AA
PLAYERUPDT:MOVER    13C2
PLAYERUPDT:MOVEU    13DA
PLAYERUPDT:RMVED    1400
PLAYERUPDT:RMVEL    13B8
PLAYERUPDT:RMVER    13D0
PLAYERUPDT:RMVEU    13E8
PLAYERX             2400
PLAYERY             2402
RNDINIT             12F8
RNGX                1306
RNGX:NOVERFLOW      1332
RNGXINDEX           2414
RNGY                1336
RNGY:NOVERFLOW      1362
RNGYINDEX           2416
SCRCYCCT            1761
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            1760
SCRIRQ              1
SCRISR              108C
SCRTIM              50
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            280
STAIRSINIT          1548
STAIRSPLOT          15D2
STAIRSPLOT:KEYOBTEINED  1624
STAIRSUPDT          1562
STAIRSUPDT:END      15CC
STAIRSUPDT:NOKEY    15B2
STAIRSX             2408
STAIRSY             240A
START               170A
START:LOOP          1722
START:WINT          1734
SYSINIT             1000
TILEDARK            745B6D
TILEDETA            A38099
TILEDIM             20
TILELIGH            CCE0EA
XVALUES             120A
YVALUES             1282
